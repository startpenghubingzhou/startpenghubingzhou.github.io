<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>望海之洲</title>
  
  <subtitle>澎湖冰洲的极客地带</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-09T16:26:33.300Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>联想小新潮7000 EFI for OpenCore 0.2 beta更新</title>
    <link href="http://yoursite.com/2019/10/09/Lenovo%20Xiaoxin%20Chao7000%20EFI%20OC%200.2%20Update/"/>
    <id>http://yoursite.com/2019/10/09/Lenovo Xiaoxin Chao7000 EFI OC 0.2 Update/</id>
    <published>2019-10-09T15:58:50.000Z</published>
    <updated>2019-10-09T16:26:33.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在昨天，苹果正式释出了15正式版的下载，广大黑果爱好者也在第一时间进行了升级。新的15加入了很多特性，如不再支持32位程序，拆分iTunes等，是一个值得体验的版本。</p><p>经过一天的紧张测试，我首先调试好了OpenCore系列的EFI，并测试无误，现在将其分享出来供大家参考</p><h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><p>本版本的更新如下：</p><p><strong>1、更新一系列驱动（Lilu、VoodooI2C、WhateverGreen等）</strong><br><strong>2、升级OC核心至0.5.1，兼容Catalina</strong></p><p><strong>3、精简了一些无用的efi驱动，增加了SSDT-EC修复进入15卡死的问题</strong></p><p><strong>4、依照Samplefull.plist修复了一些无用的代码以及条目，增加了MSR锁测试</strong></p><p><strong>5、依照宪武提供的OC方法修正了部分SSDT，尤其是触摸板的热补丁，移除XOSI以修复VoodooI2C随机性五国问题</strong></p><p>另：苹果对15的USB API大改，增加了USB内建bundle，现在，困扰已久的FaceTime黑屏问题在15得到彻底解决！！！！</p><p>全版本统一下载地址：<a href="https://pan.baidu.com/s/1QcrvxI5a68eUH37RmNd-Fg#list/path=%2F" target="_blank" rel="noopener">点我下载</a></p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>目前存在的已知问题有：</p><p><strong>1、锁MSR问题，CPU变频锁定1.6GHZ，目前尚在寻找解决方案。</strong><br><strong>2、VoodooI2C右键问题（求Alex早日找出问题……）</strong></p><p>其他问题有待各位反馈。</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p>谨在此向所有为本版本更新作出贡献的人致谢！！！！</p><p>@宪武   OC-little以及触摸板指导</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在昨天，苹果正式释出了15正式版的下载，广大黑果爱好者也在第一时间进行了升级。新的15加入了很多特性，如不再支持32位程序，拆分iTunes
      
    
    </summary>
    
      <category term="EFI" scheme="http://yoursite.com/categories/EFI/"/>
    
    
      <category term="更新" scheme="http://yoursite.com/tags/%E6%9B%B4%E6%96%B0/"/>
    
      <category term="Config" scheme="http://yoursite.com/tags/Config/"/>
    
  </entry>
  
  <entry>
    <title>VoodooI2C触摸设备驱动教程补充</title>
    <link href="http://yoursite.com/2019/07/24/VoodooI2C%20DSDT%20Edit%20FAQ/"/>
    <id>http://yoursite.com/2019/07/24/VoodooI2C DSDT Edit FAQ/</id>
    <published>2019-07-24T08:01:33.000Z</published>
    <updated>2019-07-24T08:02:51.460Z</updated>
    
    <content type="html"><![CDATA[<p>本文来自于触摸群的bat，是对本教程<a href="https://www.penghubingzhou.cn/2019/01/06/VoodooI2C%20DSDT%20Edit/" target="_blank" rel="noopener">VoodooI2C触摸板驱动教程</a>的补充。感谢bat的倾力付出！！！建议所有触摸板小白在学习完原教程后，来这里看一下，以解决一些困惑你的东西。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#fq" target="_blank" rel="noopener">FAQ</a></li><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#%E8%A7%A6%E6%91%B8%E6%9D%BF%E4%B8%93%E6%9C%89%E8%AF%8D%E6%B1%87%E9%9B%86%E5%90%88" target="_blank" rel="noopener">触摸板专有词汇集合</a></li><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88%E5%9D%87%E5%9C%A8%E7%BE%A4%E6%96%87%E4%BB%B6%E4%B8%AD" target="_blank" rel="noopener">触摸板必备软件集合</a></li><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#dsdt-%E8%A7%A6%E6%91%B8%E6%9D%BF%E9%83%A8%E5%88%86%E8%AF%A6%E8%A7%A3" target="_blank" rel="noopener">DSDT 触摸板部分详解</a></li><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#%E6%8E%92%E9%94%99" target="_blank" rel="noopener">排错</a></li><li><a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/触摸板补充.md#鸣谢" target="_blank" rel="noopener">鸣谢</a></li></ul><h2 id="致那些无脑放完驱动就能用了的小小小白"><a href="#致那些无脑放完驱动就能用了的小小小白" class="headerlink" title="致那些无脑放完驱动就能用了的小小小白"></a>致那些无脑放完驱动就能用了的小小小白</h2><blockquote><p>VoodoI2C 不同于任何一个其他的黑苹果驱动，直接将驱动放入 Clover 或者 L/E 是 <strong>完全错误</strong> 的做法，根据个人经验，高达 90% 以上的设备都默认使用 APIC 中断，只有极少数都设备默认  使用 GPIO 中断，然而，又因为绝大多数设备的 IOInterruptSpecifiers 都大于 2F，因此 APIC 中断控制器根本就不会工作，所以，即使你把驱动放进去能用了，也是极为低效的轮询模式，如果你阅读完 <a href="https://www.penghubingzhou.cn/" target="_blank" rel="noopener">群主博客</a> 和 本篇教程，你会发现这个问题显而易见。</p></blockquote><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Circumstances.png" alt="Circumstances"></p><blockquote><p>仅有极少数情况默认就能正确驱动</p></blockquote><h2 id="致刚接触触摸板的小白"><a href="#致刚接触触摸板的小白" class="headerlink" title="致刚接触触摸板的小白"></a>致刚接触触摸板的小白</h2><blockquote><p>在看这篇文章前，请仔细阅读<a href="https://www.penghubingzhou.cn/" target="_blank" rel="noopener">群主博客</a>，这篇文章旨在补充教程中没有的小细节，文章啰嗦但非常详细（废话连篇），请您耐心阅读（别光欣赏图片去了😝）</p></blockquote><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol><li><p>Dalao! 我虽然没有尝试，但是我想问问的触摸板到底能不能驱动啊！</p><ul><li>“实践是检验真理的唯一标准”，我们并不能够通过您的三两句提问确定到底能不能成功，行动起来，发现问题，解决问题，才是真理！👨‍🔧</li></ul></li><li><p>Dalao! 我该怎么用这些驱动，全部放进去吗?</p><ul><li>那就大错特错了，除非你同时拥有多个触摸设备，要不然就是使用其中的两个驱动 VoodooI2C + VoodooI2CXXX, 一个核心驱动，一个附属驱动，至于<strong>怎么选择附属驱动</strong>，请看<a href="https://www.penghubingzhou.cn/" target="_blank" rel="noopener">群主博客</a>。</li></ul></li><li><p>Dalao! 群里的人都在说哪国语言啊，什么 HID, GPIO 是什么鬼？？？</p><ul><li>仔细阅读下文的👇<code>触摸板专有词汇集合</code>没什么你搞不懂的🤨。</li></ul></li><li><p>Dalao! IORegisteryExplorer 里面触摸板设备名称里面没有 IOInterruptSpecifiers ，怎么办？</p><ul><li>确保你没有安装 VoodooI2C。</li><li>如果在没有安装 VoodooI2C 时依然没有这就说明你无需对 DSDT 进行修改！你的运气帮了你一个大忙。不过也有极少数的例外，而且处理较为复杂，<a href="https://github.com/williambj1/VoodooI2C-PreRelease/blob/master/%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%A1%A5%E5%85%85.md#dsdt-%E8%A7%A6%E6%91%B8%E6%9D%BF%E9%83%A8%E5%88%86%E8%AF%A6%E8%A7%A3" target="_blank" rel="noopener">请阅读此处（4. 例外 1）来通过 Windows 确认你的 Pin 值</a>，这需要你打包求助，由我们来为你解决。</li></ul></li><li><p>Dalao! VoodooI2C 是不是万能的，能不能完美解决所有的触摸设备？</p><ul><li>不幸的是，答案是<code>不是</code>，VoodooI2C 目前仍然存在对一些设备的兼容问题。</li></ul></li><li><p>Dalao! 什么是轮询？什么是中断？</p><ul><li><p>现实中的中断和轮询可以看看这个👉<a href="https://baike.baidu.com/item/%E8%BD%AE%E8%AF%A2%E5%92%8C%E4%B8%AD%E6%96%AD/267433?fr=aladdin" target="_blank" rel="noopener">🚪</a>。</p></li><li><p>在触摸板上，我们这样定义：</p><blockquote><p>轮询就是每隔一个特定的时间扫描一次触摸板的状态，然后改变鼠标指针坐标。<br>中断则是你触摸板的正常工作方式 (Windows / Linux 中即是如此)。</p></blockquote></li><li><p>在 DSDT 的修改中我们这样定义：（请仔细阅读下文👇）。</p><blockquote><p><strong>GPIO 中断：</strong> DSDT 在 <code>SBFG</code> 中存在有效 <code>GPIO Pin</code>，<code>CRS</code> 方法中返回 <code>(SBFB,SBFG)</code>，并应用启用 <code>GPIO</code> 控制器的补丁。<br><strong>APIC 中断：</strong> （注意，不是 ACPI）当你的 IOInterruptSpecifiers 值 <strong>没有</strong> 或者小于<code>2F(16进制)</code>时，此时就是 APIC 中断，无需对 DSDT 进行大量修改，只用应用 <code>Windows(20XX) 补丁</code>即可。此时使用的是 APIC 控制器而不是 GPIO 控制器。<br><strong>轮询：</strong> DSDT 中除了 <code>Windows(20XX)</code> 补丁以外，不应用其他补丁，CRS 方法中只返回 <code>SBFB</code> 或者 <code>(SBFB,SBFI)</code>。</p></blockquote></li></ul></li><li><p>Dalao! 到底是中断好还是轮询好？😖</p><ul><li>正如上文所述，中断才是触摸板的正确驱动方式，但受到 VoodooI2C 驱动，苹果触摸驱动及自身设备 GPIO 特殊性等等原因，有些设备只能通过<strong>轮询</strong>的方式驱动，轮询就像 Windows 里的<strong>安全模式</strong>，因为触摸板本身就不是设计来在一定时间不断轮询的，所以注定有 <code>Bug</code> 比如指针漂移，少手指等等，但是用这种方式驱动总比没有驱动强。</li></ul></li><li><p>Dalao! DSDT 里我找不到我的触摸板啊，搜不到 <code>SBFG</code> 怎么办？</p><ul><li>你可以尝试搜索你的设备名，比如(<code>ETPD</code>, <code>TPDO</code>, <code>TPAD</code>等等)。</li></ul></li><li><p>Dalao! DSDT 看得头晕眼花怎么办？</p><ul><li>请看下方的 DSDT 触摸板部分详解👇</li></ul></li><li><p>Dalao! APIC 中断和 GPIO 中断有什么区别？</p><ul><li>两者使用不同的控制器</li><li>APIC 中断省时省力，但是要看看你有没有这个福气了</li><li>GPIO 则需要 VoodooGPIO (已包含在VoodooI2C中作为插件) 来启用 GPIO 控制器，同时也需要对 DSDT 进行相对复杂的修改（其实很简单）</li></ul></li><li><p>Dalao! 能不能通过终端重新加载 VoodooI2C ？</p><ul><li>不幸的是，这个功能被某一次更新破坏了，官方至今未修复</li></ul></li></ol><h2 id="触摸板专有词汇集合"><a href="#触摸板专有词汇集合" class="headerlink" title="触摸板专有词汇集合"></a>触摸板专有词汇集合</h2><ol><li><p>HID</p><blockquote><p>Human Interface Device 说白了就是人和电脑交互的设备</p></blockquote></li><li><p>ELAN</p><blockquote><p>ElanTech 生产的触摸板，简称 ELAN，常见于华硕电脑</p></blockquote></li><li><p>SYNA</p><blockquote><p>Synaptics 新思触摸板</p></blockquote></li><li><p>CRS方法</p><blockquote><p>DSDT 中用于返回值的“方法”</p></blockquote></li><li><p>PS/2</p><blockquote><p>PS/2 通道的触摸板，请使用 VoodooPS2 (Acidanthera自带手势), 如果出问题可以尝试 Rehabman 版本并配上手势文件，不建议使用 ApplePS2SmartTouchPad (多年未更新，且不开源)</p></blockquote></li><li><p>I2C</p><blockquote><p>I2C 通道的触摸板，请使用 VoodooI2C</p></blockquote></li><li><p>先暂时想到这么多。。。。</p></li></ol><h2 id="触摸板必备软件集合-均在群文件中"><a href="#触摸板必备软件集合-均在群文件中" class="headerlink" title="触摸板必备软件集合(均在群文件中)"></a>触摸板必备软件集合(均在群文件中)</h2><ul><li>MaciASL – 用于修改 DSDT</li><li>IORegisteryExplorer v2.1 <strong>(请勿使用其他版本)</strong> – 用于查看数据 / 排错</li><li>FingerMgmt – 用于查看识别手指个数</li><li>maclog – 用于查看日志排错</li></ul><h2 id="DSDT-触摸板部分详解"><a href="#DSDT-触摸板部分详解" class="headerlink" title="DSDT 触摸板部分详解"></a>DSDT 触摸板部分详解</h2><ol><li><p>当你在 DSDT 里搜索 SBFG 或者你的触摸板名称时，会大致出来以下代码(是不是头晕眼花😵)</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/ETPD.png" alt="Mess"></p></li><li><p>我们来提取提取主干，仔细看看不难发现其结构(我们需要了解的部分)如下，是不是一目了然？</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Main.png" alt="Main"></p></li><li><p>接下来( GPIO 中断修改)</p><ol><li><p>接下来请不断查看此处确保你一直位于你的触摸板里面</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Check.png" alt="Check"></p></li><li><p>应用所需的补丁，并按下编译，查看是否有错误，如有错误，请打包求助</p></li><li><p>移除 SBFI，或者有的 DSDT 的 SBFI 内容内嵌于 SBFB，请删除其中的代码</p></li><li><p>如果你的 DSDT 里本身就有 SBFG 且 <code>Pin List</code> 下方的内容不为零，那么直接跳到本小节的第 6 步，如果没有，请继续往下看</p></li><li><p>如果您没有 SBFG，请复制如下代码手动添加</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/NO-SBFG.png" alt="NO-SBFG">  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> Name (SBFG, ResourceTemplate ()</span><br><span class="line">&#123;</span><br><span class="line">    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,</span><br><span class="line">        &quot;\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,</span><br><span class="line">        )</span><br><span class="line">        &#123;   // Pin list</span><br><span class="line">            0x修改</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>添加完和上面一样就好了</p></li><li><p>确定 GPIO Pin，按照群主博客指示查找你的 GPIO Pin，把 <code>修改</code> 改成你的值(有的时候转化出来的值不止一个，请制作两份文件依次尝试)。</p></li><li><p>转到 <code>CRS</code> 方法(别翻过头了，数一数大括号，看一眼左下角，确保你还在你的触摸板里。</p><p>  <img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Sure-CRS.png" alt="Sure-CRS"></p><ul><li>把所有的 Return (XXXX) 和 Return (<strong>ConcatenateResTemplate</strong> (<code>SBFB</code>, <strong>XXXX</strong>)) 都修改成 <code>(SBFB,SBFG)</code>。</li><li><strong>或者</strong><ol><li>清空里面的一堆 If 条件语句（如果有），将里面的 <code>(SBFB,SBFI)</code> 改成 <code>(SBFB,SBFG)</code>。</li><li>按<code>编译</code>键查看是否有错误，删掉发生错误的行(此行必须位于触摸板中，且在报告中夹在在一堆警告⚠️中)。</li></ol></li></ul><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Return-SBFG.png" alt="Return-SBFG"></p></li><li><p>没有错误那就大功告成了。</p></li></ol></li><li><p>例外</p><ul><li><p>有些情况非常极端，需要通过 Windows 来确定你的 IOInterruptSpecifiers 具体方法如下：</p><ol><li>打开设备管理器</li><li>找到 I2C HID 设备</li><li>双击点开，转到 <code>资源</code> 页面</li><li>里面的 <code>IRQ</code> 就是 IOInterruptSpecifiers</li></ol><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Pin-1024.png" alt="Pin-1024"></p></li><li><p>有的 DSDT 里，<code>SBFB</code>, <code>SBFG</code>, <code>SBFI</code> 这些值位于 <code>CRS</code> 方法中，与常规的结构有所不同，不过这种情况问题不大，你依然可以继续按教程修改。</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/In-CRS.png" alt="In-CRS"></p></li><li><p>有的 DSDT 里，<code>SBFB</code>, <code>SBFG</code>, <code>SBFI</code> 这些值不仅设备的根目录里有，<code>CRS</code> 方法中也有，与常规的结构大有不同，这种情况就需要你灵活变通理解到底那个起作用，通常情况下修改 <code>CRS</code> 方法里的就可以了，如果你多次尝试还是搞不定，请打包求助。</p></li><li><p>有的 DSDT 更加让人摸不着头脑🧠，除了有 <code>SBFB</code>, <code>SBFG</code>, <code>SBFI</code>，还有 <code>SBFS</code>, <code>SBFF</code>, <code>SBFE</code> 等等，仔细观察你会发现，这些例外里的内容和 <code>SBFB</code> 里的内容几乎一摸一样，这就说明他们是和 <code>SBFB</code> 是起到相同作用的，只是设备地址不同，因此，如果 <code>CRS</code> 方法里如果有大量的条件语句，你只要把 (SBF <strong>(X)</strong>,SBFI) 改成 (SBF <strong>(X)</strong>,SBFG) 即可，假如你的 <code>CRS</code> 里只有一个简单的返回 (SBF <strong>(X)</strong>,SBFI)，你则需要创建多个文件，分别尝试不同的 (SBF <strong>(X)</strong>,SBF<strong>G</strong>)。</p></li></ul></li></ol><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="I-五国"><a href="#I-五国" class="headerlink" title="I. 五国"></a>I. 五国</h3><ul><li><p>由于五国状况复杂这里只提供一个能减少五国概率的方法，如果还是一样，请拍照发群里</p><ol><li><p>打开 VoodooI2C.kext⁩ ▸ 右键 ▸ 显示包内容 ▸ ⁨Contents⁩ ▸ Info.plist (用 Xcode, PlistEdit Pro 或者 VS Code 打开 <strong>千万别用 Clover Configurator</strong>) 这里以 VS Code 为例</p></li><li><p>⌘ + F 搜索 <code>&lt;string&gt;VoodooI2CPCIController&lt;/string&gt;</code></p></li><li><p>往下翻一点找到这些</p><figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9d60<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9d61<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9d62<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9d63<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9de8<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,9de9<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,a160<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,a161<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,a162<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,a368<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>pci8086,a369<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 Windows 里查看你设备使用的是哪一个，删掉其他的，保留你用的</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/a369.png" alt="a369"></p></li></ol></li></ul><h3 id="II-学会使用-maclog-提取日志"><a href="#II-学会使用-maclog-提取日志" class="headerlink" title="II. 学会使用 maclog 提取日志"></a>II. 学会使用 maclog 提取日志</h3><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/maclog.png" alt="maclog"></p><ul><li><p>下载完后双击解压</p></li><li><p>双击运行，程序会先调用终端，接着会弹出来 <strong>“魔改过的”</strong> 控制台日志窗口</p></li><li><p>在右上角的搜索栏中搜索 <code>Voodoo</code></p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Voodoo.png" alt="Voodoo"></p></li><li><p>将文本复制粘贴到记事本中</p></li><li><p>再在右上角的搜索栏中搜索 <strong>你的设备名</strong> ，比如 <code>ETPD</code>, <code>TPAD</code>, <code>TPD0</code></p></li><li><p>将文本复制粘贴到记事本中</p></li><li><p>保存好文本文档</p></li></ul><h3 id="III-确保你使用了正确-VoodooI2C-及附属驱动，不能多也不能少"><a href="#III-确保你使用了正确-VoodooI2C-及附属驱动，不能多也不能少" class="headerlink" title="III. 确保你使用了正确 VoodooI2C 及附属驱动，不能多也不能少"></a>III. 确保你使用了正确 <code>VoodooI2C</code> 及附属驱动，不能多也不能少</h3><h3 id="IV-查看-IORegisteryExplorer-里-VoodooI2C-是否正常加载"><a href="#IV-查看-IORegisteryExplorer-里-VoodooI2C-是否正常加载" class="headerlink" title="IV. 查看 IORegisteryExplorer 里 VoodooI2C 是否正常加载"></a>IV. 查看 <code>IORegisteryExplorer</code> 里 <code>VoodooI2C</code> 是否正常加载</h3><ol><li><p>不正常1:</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/LpssI2C.png" alt="LpssI2C"></p><ul><li><p>解决方案：添加 <code>Clover</code> 里有屏蔽冲突驱动的补丁</p><ol><li><p>Clover Configurator 法</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Disable.png" alt="Disable-CCG"></p></li><li><p>Plist 编辑器法</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Disable2.png" alt="Disable-XCode"></p></li><li><p>文本法</p><details><summary>（点击此处以展开）</summary> <figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>KextsToPatch<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Comment<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>Disable AppleIntelLpssI2C (credit by Coolstar)    <span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Find<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">            SU9LaXQ=</span><br><span class="line">            <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>InfoPlistPatch<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>AppleIntelLpssI2C<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Replace<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">            SU9LaXM=</span><br><span class="line">            <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Comment<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>Disable AppleIntelLpssI2CCOntroller (credit by     Coolstar)<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Find<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">            SU9LaXQ=</span><br><span class="line">            <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>InfoPlistPatch<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>AppleIntelLpssI2CController<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>Replace<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">            SU9LaXM=</span><br><span class="line">            <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure></details></li></ol></li><li><p>暴力删除法：进入 <code>/System/Library/Extensions/</code> 删除这两个驱动 <strong>AppleIntelLpssI2C</strong> &amp; <strong>AppleIntelLpssI2CController</strong></p></li></ul></li><li><p>不正常2:</p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Wrong2.png" alt="Wrong2"></p><ul><li>提取日志并进行分析</li></ul><ol><li><p>出现如下字样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VoodooGPIOXXX:: pin XXX cannot be used as IRQ</span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong> 你转换的 GPIO Pin 超出范围了，换另一个</p></li><li><p>出现如下字样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VoodooI2C:: Failed to load</span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong> 确认你使用了正确的驱动及附属驱动并且加上了屏蔽冲突驱动的补丁</p></li><li><p>七代设备出现如下字样，或者 CPU 占用极高</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">VoodooI2CControllerDriver::pci8086,9XXX Warning: Error getting bus config, using defaults where necessary</span><br><span class="line">VoodooI2CControllerDriver::pci8086,9XXX I2C Transaction error details</span><br><span class="line">VoodooI2CControllerDriver::pci8086,9XXX lost arbitration</span><br><span class="line">VoodooI2CControllerDriver::pci8086,9XXX I2C Transaction error: 0x0e001000 - aborting</span><br><span class="line">Request for HID descriptor failed</span><br><span class="line">Request for HID descriptor failed</span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong></p><p>使用 SSDT-I2CxConf 修补 I2C 速度常量 SSCN 和 FMCN</p><p>使用方法  </p><pre><code>1. 将 [SSDT-I2CxConf.dsl](https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/SSDT-I2CxConf.dsl) 另存为编译成 SSDT-I2CxConf.aml  2. 在 Clover 中添加如下重命名：</code></pre><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Rename-SSCN-FMCN.png" alt="Rename SSCN FMCN"></p><p><strong>如果依旧没有效果</strong></p><p>删除上方的改动，在你的DSDT的触摸板设备上方加上这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name (SSCN, Package () &#123; 528, 640, 30 &#125;)</span><br><span class="line">Name (FMCN, Package () &#123; 128, 160, 30 &#125;)</span><br></pre></td></tr></table></figure><p><strong>像这样：</strong></p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/7-SSCN-FMCN.png" alt="7Gen"></p><p><strong>如果不理想，再尝试这个：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name (SSCN, Package () &#123; 432, 507, 30 &#125;)</span><br><span class="line">Name (FMCN, Package () &#123; 72, 160, 30 &#125;)</span><br></pre></td></tr></table></figure></li><li><p>八代标压设备出现如下字样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">VoodooI2CControllerNub::pci8086,aXXX SSCN not implemented in ACPI tables</span><br><span class="line">VoodooI2CControllerNub::pci8086,aXXX FMCN not implemented in ACPI tables</span><br><span class="line">VoodooI2CControllerDriver::pci8086,aXXX Warning: Error getting bus config, using defaults where necessary</span><br><span class="line">VoodooI2CControllerDriver::pci8086,a369 I2C Transaction error details</span><br><span class="line">VoodooI2CControllerDriver::pci8086,a369 slave address not acknowledged (7bit mode)</span><br><span class="line">VoodooI2CControllerDriver::pci8086,a369 I2C Transaction error: 0x08800001 - aborting</span><br><span class="line">Request for HID descriptor failed</span><br><span class="line">Could not get HID descriptor</span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong></p><p>使用 SSDT-I2CxConf 修补 I2C 速度常量 SSCN 和 FMCN</p><p>使用方法  </p><pre><code>1. 将 [SSDT-I2CxConf.dsl](https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/SSDT-I2CxConf.dsl) 另存为编译成 SSDT-I2CxConf.aml  2. 在 Clover 中添加如下重命名：</code></pre><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Rename-SSCN-FMCN.png" alt="Rename SSCN FMCN"></p><p><strong>如果依旧没有效果</strong></p><p>删除上方的改动，在你的DSDT的触摸板设备上方加上这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Method (SSCN, 0, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">    Return (PKG3 (SSH1, SSL1, SSD1))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Method (FMCN, 0, NotSerialized)</span><br><span class="line">&#123;</span><br><span class="line">    Name (PKG, Package (0x03)</span><br><span class="line">    &#123;</span><br><span class="line">        0x0101,</span><br><span class="line">        0x012C,</span><br><span class="line">        0x62</span><br><span class="line">    &#125;)</span><br><span class="line">    Return (PKG) /* \_SB_.PCI0.I2C1.FMCN.PKG_ */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>然后在 <code>Scope (_SB.PCI0.I2C1)</code> 上面加上</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Method (PKG3, 3, Serialized)</span><br><span class="line">&#123;</span><br><span class="line">    Name (PKG, Package (0x03)</span><br><span class="line">    &#123;</span><br><span class="line">        Zero,</span><br><span class="line">        Zero,</span><br><span class="line">        Zero</span><br><span class="line">    &#125;)</span><br><span class="line">    PKG [Zero] = Arg0</span><br><span class="line">    PKG [One] = Arg1</span><br><span class="line">    PKG [0x02] = Arg2</span><br><span class="line">    Return (PKG) /* \PKG3.PKG_ */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>像这样：</strong></p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/8-SSCN-FMCN.png" alt="8Gen"></p></li></ol></li></ol><h3 id="V-尝试输入密码登陆界面或者不带鼠标开机能不能使用触摸板"><a href="#V-尝试输入密码登陆界面或者不带鼠标开机能不能使用触摸板" class="headerlink" title="V. 尝试输入密码登陆界面或者不带鼠标开机能不能使用触摸板"></a>V. 尝试<strong>输入密码登陆界面</strong>或者<strong>不带鼠标开机</strong>能不能使用触摸板</h3><ul><li><p>如果可以，请进入 偏好设置 ▸ 辅助功能 ▸ 鼠标与触控板 ▸ <strong>取消勾选</strong> <code>有鼠标或无线触控板时忽略内建触摸板</code></p><p><img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Ignore.png" alt="Ignore"></p></li></ul><h3 id="VI-驱动放进-Library-Extensions，然后重建缓存"><a href="#VI-驱动放进-Library-Extensions，然后重建缓存" class="headerlink" title="VI. 驱动放进 Library/Extensions，然后重建缓存"></a>VI. 驱动放进 <code>Library/Extensions</code>，然后重建缓存</h3><p>   <img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/L-E.png" alt="L/E"></p><p>   然后打开终端，输入</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kextcache -i/</span><br></pre></td></tr></table></figure><h3 id="VII-尝试睡眠唤醒"><a href="#VII-尝试睡眠唤醒" class="headerlink" title="VII. 尝试睡眠唤醒"></a>VII. 尝试睡眠唤醒</h3><h3 id="如果还是不行，请提交一下内容"><a href="#如果还是不行，请提交一下内容" class="headerlink" title="如果还是不行，请提交一下内容"></a>如果还是不行，请提交一下内容</h3><ul><li>原始 DSDT (Clover F4 的完整 ACPI 表) 一份</li><li>针对触摸板修改过的 DSDT 一份</li><li>装了 VoodooI2C 时的 IOREG 一份（文件 -&gt; 另存为）</li><li>maclog 提取的日志一份</li><li>一份详细的描述<ul><li>包含：<ol><li>笔记本机型</li><li>触摸板型号</li><li>触摸板 BIOS 设备地址</li><li>出厂 Windows 版本和当前 macOS 版本</li><li>使用的 VoodooI2C 版本以及使用的附属驱动名称</li><li>处理器型号</li><li>问题的详细描述</li></ol></li></ul></li></ul><h3 id="最后，祝你早日见到这个感人的界面，用上丝滑的触摸板！"><a href="#最后，祝你早日见到这个感人的界面，用上丝滑的触摸板！" class="headerlink" title="最后，祝你早日见到这个感人的界面，用上丝滑的触摸板！"></a>最后，祝你早日见到这个感人的界面，用上丝滑的触摸板！</h3><p>   <img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Success.png" alt="Success1"></p><p>   <img src="https://raw.githubusercontent.com/williambj1/VoodooI2C-PreRelease/master/IMG/Success2.png" alt="Success2"></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><ul><li><a href="https://voodooi2c.github.io/#Credits%20and%20Acknowledgments/Credits%20and%20Acknowledgments" target="_blank" rel="noopener">VoodooI2C 开发组</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文来自于触摸群的bat，是对本教程&lt;a href=&quot;https://www.penghubingzhou.cn/2019/01/06/VoodooI2C%20DSDT%20Edit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VoodooI2C触摸板
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="DSDT" scheme="http://yoursite.com/tags/DSDT/"/>
    
      <category term="I2C" scheme="http://yoursite.com/tags/I2C/"/>
    
      <category term="触摸板" scheme="http://yoursite.com/tags/%E8%A7%A6%E6%91%B8%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>电池热补丁制作教程</title>
    <link href="http://yoursite.com/2019/05/02/Battery%20Hotpatch%20Make/"/>
    <id>http://yoursite.com/2019/05/02/Battery Hotpatch Make/</id>
    <published>2019-05-02T12:28:49.000Z</published>
    <updated>2019-12-24T08:32:04.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个教程，是基于宪武大神的口述，加上博主的亲身实践并精心整理而成的，且发布已经得到宪武大神的授权，任何其他形式的转载请注明出处！！！教程并不一定适用于所有情况，只是给各位提供一个比较基础的思路。如果中间有任何问题，欢迎反馈给我，好让我及时更新教程。</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E6%8E%88%E6%9D%83.png" alt="授权"></p><h1 id="我为什么要修改"><a href="#我为什么要修改" class="headerlink" title="我为什么要修改"></a>我为什么要修改</h1><p>修改这个的意义，实际就是热补丁的意义。尽管我已经在我的另一篇<a href="http://bbs.pcbeta.com/viewthread-1797378-1-1.html" target="_blank" rel="noopener">教程</a>里面说过了热补丁的好处，我还是乐意在这里再复述一遍。</p><p><strong>热补丁的编辑更加高效。</strong>使用热补丁，你不需要去修改其他的无关代码，也不需要你去联合反编译DSDT然后除错，更是大大节省了你的工程量。</p><p><strong>热补丁更加安全。</strong>如果热补丁导致你的启动出现问题，你只需要还原对应的热补丁修改（删除热补丁）即可，既快捷又方便，并且也无需备份什么。而如果是DSDT，在改动前你必须备份原有DSDT，而且出了问题时排除代码是个很让人头疼的问题。</p><p><strong>热补丁管理方便。</strong>每个功能可以写一个热补丁，无论是配置文件里还是SSDT，都方便管理与添加；并且由于热补丁的动态注入特性，在部分情况下可以实现直接修改DSDT报错而不能完成的修改。</p><p><strong>热补丁与平台无关</strong>。由于这一点，有些修改的热补丁可以跨平台使用，大大提高了黑果的移植度以及修改工程量。尤其是，当你发现某些机型的DSDT不能通用但是却具有高度相似的修改时，热补丁的优势将尤其明显(比如潮7000 13寸与14寸，以及潮5000关于触摸板的部分)</p><p>基于上述这几点，我们也显然可以看到了电池热补丁的优势：<strong>跨平台、易修改、易参考、高度可移植</strong>。</p><h1 id="阅读预备"><a href="#阅读预备" class="headerlink" title="阅读预备"></a>阅读预备</h1><p>正如我一直跟黑果进阶的同学反复强调的那样，热补丁是DSDT的延伸，因此，基于这一点，以下情况，我不推荐您阅读此教程：</p><ul><li><p>没有良好的DSDT基础</p></li><li><p>电池尚未用DSDT补丁修改好</p></li></ul><p>在阅读本教程之前，建议先去阅读下这篇帖子：<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1778499&highlight=" target="_blank" rel="noopener">修改dsdt实现电量显示方法（整理修改已有帖子)</a>，了解下基础的字节以及补丁工作原理，然后再来阅读下本教程。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>电池热补丁的原理，本质就是热补丁的原理以及电池的字节拆分原理，在此我不再赘述，有兴趣的请自己去百度相关教程。不过涉及到一些这二者协调部分的原理，在这里我有必要解释一下：</p><p>我们知道，在DSDT的电池补丁里，电池的各种变量，存在一个变量的字节位占用问题，如果将变量字节位搞错，将会导致打补丁后的DSDT无法正常显示电池信息。而热补丁本质就是DSDT的延伸，因此，我们在热补丁中动态修补电池字节数据的时候，也必须保留对原有字节位的占用，而不能随意错位。电池的数据一般存储在一个大的OperationRegion块中。懂热补丁的都知道，显然OperationRegion方法是不允许直接注入的。因此，我们通常想到的就是直接将电池设备改名，重新注入数据。这种方法经过本人测试，存在很大问题，其中之一就是数据无法正确注入修改后的电池数据（OperationRegion）到DSDT中，会报错。另外这样书写的热补丁代码量太大，需要处理的引用与方法交叉十分多。</p><p>所幸宪武大神给出了一个折中的方法：新建一个OperationRegion块，在这个新块里动态注入所有的拆分字节数据；同时，对原有的未拆分字节保留空位，从而在保证位移量正确的情况下正确注入并引用新的数据。如此，电池就可以以热补丁的形式注入字节数据并被修改为正确信息。</p><p>当然，这种方法也有其弊端在里面：由于二次调用数据，这样的热补丁执行效率会有点低，但是对于现在的机子而言，这个效率的影响微乎其微。</p><p>基于这样的一个思路，我们接下来就可以开始制作电池的热补丁。</p><h1 id="开始制作"><a href="#开始制作" class="headerlink" title="开始制作"></a>开始制作</h1><h2 id="分析补丁"><a href="#分析补丁" class="headerlink" title="分析补丁"></a>分析补丁</h2><p>在开始制作之前，我们首先就需要对我们的电池DSDT补丁进行分析，来确定哪些数据是我们接下来需要使用到的。比如以潮7000 13寸的电池热补丁来说，是这样的：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.</span><br><span class="line"><span class="number">2</span>. </span><br><span class="line"><span class="number">3</span>. #BML0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">4</span>. #BAV0,   <span class="number">16</span>, </span><br><span class="line"><span class="number">5</span>. #BAC0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">6</span>. #BRC0,   <span class="number">16</span>, </span><br><span class="line"><span class="number">7</span>. #BTP0,   <span class="number">16</span>, </span><br><span class="line"><span class="number">8</span>. #BCC0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">9</span>. #FCC0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">10</span>.#BDC0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">11</span>.#BDV0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">12</span>.#BMD0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">13</span>.#MANA,   <span class="number">96</span>,</span><br><span class="line"><span class="number">14</span>.#DENA,   <span class="number">64</span>,</span><br><span class="line"><span class="number">15</span>.#CHEM,   <span class="number">32</span>,</span><br><span class="line"><span class="number">16</span>.#ATE0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">17</span>.#ATF0,   <span class="number">16</span>,</span><br><span class="line"><span class="number">18</span>.#FWIN,   <span class="number">64</span>,</span><br><span class="line"><span class="number">19</span>.#BARC,   <span class="number">128</span>,</span><br><span class="line"><span class="number">20</span>.#SMDA,   <span class="number">256</span>,</span><br><span class="line"><span class="number">21</span>. </span><br><span class="line"><span class="number">22</span>.#BAT0 <span class="keyword">on</span> H_EC</span><br><span class="line"><span class="number">23</span>.#BAT1 <span class="keyword">on</span> H_EC</span><br><span class="line"><span class="number">24</span>.#BAT2 <span class="keyword">on</span> H_EC</span><br><span class="line"><span class="number">25</span>. </span><br><span class="line"><span class="number">26</span>. <span class="keyword">into</span> device label H_EC code_regex BML0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> ML00,<span class="number">8</span>,ML01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">27</span>. <span class="keyword">into</span> device label H_EC code_regex BAV0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> AV00,<span class="number">8</span>,AV01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">28</span>. <span class="keyword">into</span> device label H_EC code_regex BAC0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> AC00,<span class="number">8</span>,AC01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">29</span>. <span class="keyword">into</span> device label H_EC code_regex BRC0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> RC00,<span class="number">8</span>,RC01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">30</span>. <span class="keyword">into</span> device label H_EC code_regex BTP0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> TP00,<span class="number">8</span>,TP01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">31</span>. <span class="keyword">into</span> device label H_EC code_regex BCC0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> CC00,<span class="number">8</span>,CC01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">32</span>. <span class="keyword">into</span> device label H_EC code_regex FCC0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> FC00,<span class="number">8</span>,FC01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">33</span>. <span class="keyword">into</span> device label H_EC code_regex BDC0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> DC00,<span class="number">8</span>,DC01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">34</span>. <span class="keyword">into</span> device label H_EC code_regex BDV0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> DV00,<span class="number">8</span>,DV01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">35</span>. <span class="keyword">into</span> device label H_EC code_regex BMD0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> MD00,<span class="number">8</span>,MD01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">36</span>. <span class="keyword">into</span> device label H_EC code_regex CHEM,\s+<span class="number">32</span>, replace_matched <span class="keyword">begin</span> HEM0,<span class="number">8</span>,HEM1,<span class="number">8</span>,HEM2,<span class="number">8</span>,HEM3,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">37</span>. <span class="keyword">into</span> device label H_EC code_regex ATE0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> TE00,<span class="number">8</span>,TE01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">38</span>. <span class="keyword">into</span> device label H_EC code_regex ATF0,\s+<span class="number">16</span>, replace_matched <span class="keyword">begin</span> TF00,<span class="number">8</span>,TF01,<span class="number">8</span>, <span class="keyword">end</span>;</span><br><span class="line"><span class="number">39</span>. </span><br><span class="line"><span class="number">40</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BIF</span> <span class="title">code_regex</span> \<span class="params">(BML0, replaceall_matched <span class="keyword">begin</span> (B1B2(ML00,ML01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">41</span>. </span><br><span class="line"><span class="number">42</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> \<span class="params">(BML0, replaceall_matched <span class="keyword">begin</span> (B1B2(ML00,ML01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">43</span>. </span><br><span class="line"><span class="number">44</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> <span class="title">BAV0</span>\), <span class="title">replaceall_matched</span> <span class="title">begin</span> <span class="title">B1B2</span><span class="params">(AV00,AV01)</span>), <span class="title">end</span>;</span></span><br><span class="line"><span class="number">45</span>. </span><br><span class="line"><span class="number">46</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> \<span class="params">(BAV0, replaceall_matched <span class="keyword">begin</span> (B1B2(AV00,AV01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">47</span>. </span><br><span class="line"><span class="number">48</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BAV0, replaceall_matched <span class="keyword">begin</span> (B1B2(AV00,AV01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">49</span>. </span><br><span class="line"><span class="number">50</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> \<span class="params">(BAC0\)</span>, <span class="title">replaceall_matched</span> <span class="title">begin</span> <span class="params">(B1B2(AC00,AC01)</span>), <span class="title">end</span>;</span></span><br><span class="line"><span class="number">51</span>. </span><br><span class="line"><span class="number">52</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> \<span class="params">(BAC0, replaceall_matched <span class="keyword">begin</span> (B1B2(AC00,AC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">53</span>. </span><br><span class="line"><span class="number">54</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BST</span> <span class="title">code_regex</span> \<span class="params">(BRC0, replaceall_matched <span class="keyword">begin</span> (B1B2(RC00,RC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">55</span>. </span><br><span class="line"><span class="number">56</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BRC0, replaceall_matched <span class="keyword">begin</span> (B1B2(RC00,RC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">57</span>. </span><br><span class="line"><span class="number">58</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BTP0, replaceall_matched <span class="keyword">begin</span> (B1B2(TP00,TP01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">59</span>. </span><br><span class="line"><span class="number">60</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BCC0, replaceall_matched <span class="keyword">begin</span> (B1B2(CC00,CC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">61</span>. </span><br><span class="line"><span class="number">62</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BIF</span> <span class="title">code_regex</span> \<span class="params">(FCC0, replaceall_matched <span class="keyword">begin</span> (B1B2(FC00,FC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">63</span>. </span><br><span class="line"><span class="number">64</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BIF</span> <span class="title">code_regex</span> \<span class="params">(FCC0\)</span> <span class="title">replaceall_matched</span> <span class="title">begin</span> <span class="params">(B1B2(FC00,FC01)</span>) <span class="title">end</span>;</span></span><br><span class="line"><span class="number">65</span>. </span><br><span class="line"><span class="number">66</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(FCC0, replaceall_matched <span class="keyword">begin</span> (B1B2(FC00,FC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">67</span>. </span><br><span class="line"><span class="number">68</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BIF</span> <span class="title">code_regex</span> \<span class="params">(BDC0, replaceall_matched <span class="keyword">begin</span> (B1B2(DC00,DC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">69</span>. </span><br><span class="line"><span class="number">70</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BDC0, replaceall_matched <span class="keyword">begin</span> (B1B2(DC00,DC01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">71</span>. </span><br><span class="line"><span class="number">72</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">BIF</span> <span class="title">code_regex</span> \<span class="params">(BDV0, replaceall_matched <span class="keyword">begin</span> (B1B2(DV00,DV01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">73</span>. </span><br><span class="line"><span class="number">74</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BDV0, replaceall_matched <span class="keyword">begin</span> (B1B2(DV00,DV01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">75</span>. </span><br><span class="line"><span class="number">76</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BMD0, replaceall_matched <span class="keyword">begin</span> (B1B2(MD00,MD01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">77</span>. </span><br><span class="line"><span class="number">78</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(MANA, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0x30,96)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">79</span>. </span><br><span class="line"><span class="number">80</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(DENA, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0x8C,64)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">81</span>. </span><br><span class="line"><span class="number">82</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(CHEM, replaceall_matched <span class="keyword">begin</span> (B1B4(HEM0,HEM1,HEM2,HEM3)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">83</span>. </span><br><span class="line"><span class="number">84</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(ATE0, replaceall_matched <span class="keyword">begin</span> (B1B2(TE00,TE01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">85</span>. </span><br><span class="line"><span class="number">86</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">SMTF</span> <span class="title">code_regex</span> \<span class="params">(ATF0, replaceall_matched <span class="keyword">begin</span> (B1B2(TF00,TF01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">87</span>. </span><br><span class="line"><span class="number">88</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(ATF0, replaceall_matched <span class="keyword">begin</span> (B1B2(TF00,TF01)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">89</span>. </span><br><span class="line"><span class="number">90</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(FWIN, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0xA0,64)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">91</span>. </span><br><span class="line"><span class="number">92</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">MHIF</span> <span class="title">code_regex</span> \<span class="params">(FWIN, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0xA0,64)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">93</span>. </span><br><span class="line"><span class="number">94</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">GSBI</span> <span class="title">code_regex</span> \<span class="params">(BARC, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0xA8,128)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">95</span>. </span><br><span class="line"><span class="number">96</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">MHPF</span> <span class="title">code_regex</span> <span class="title">Store</span>\<span class="title">s</span>\<span class="params">(FB4,\sSMDA\)</span> <span class="title">replaceall_matched</span> <span class="title">begin</span> \\_<span class="title">SB</span>.<span class="title">PCI0</span>.<span class="title">LPCB</span>.<span class="title">H_EC</span>.<span class="title">WECB</span><span class="params">(0x04,256,FB4)</span> <span class="title">end</span>;</span></span><br><span class="line"><span class="number">97</span>. </span><br><span class="line"><span class="number">98</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">MHPF</span> <span class="title">code_regex</span> \<span class="params">(SMDA, replaceall_matched <span class="keyword">begin</span> (\\_SB.PCI0.LPCB.H_EC.RECB(0x04,256)</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="number">99</span>. </span><br><span class="line"><span class="number">100</span>. <span class="keyword">into</span> device label BAT1 parent_label H_EC remove_entry;</span><br><span class="line"><span class="number">101</span>. <span class="keyword">into</span> device label BAT2 parent_label H_EC remove_entry;</span><br><span class="line"><span class="number">102</span>. </span><br><span class="line"><span class="number">103</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> _<span class="title">STA</span> <span class="title">parent_label</span> <span class="title">BAT0</span> <span class="title">replace_content</span> <span class="title">begin</span> <span class="title">Return</span> <span class="params">(0x1F)</span> <span class="title">end</span>;</span></span><br><span class="line"><span class="number">104</span>. </span><br><span class="line"><span class="number">105</span>. \#B1B2</span><br><span class="line"><span class="number">106</span>. \#B1B3</span><br><span class="line"><span class="number">107</span>. \#B1B4</span><br><span class="line"><span class="number">108</span>. \#RECB</span><br><span class="line"><span class="number">109</span>. \#WECB</span><br><span class="line"><span class="number">110</span>. </span><br><span class="line"><span class="number">111</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">B1B2</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">112</span>. <span class="keyword">into</span> definitionblock code_regex . insert</span><br><span class="line"><span class="number">113</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">114</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(B1B2, 2, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">115. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">116. Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">117. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">118. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">119</span>. </span><br><span class="line"><span class="number">120</span>. \#<span class="keyword">For</span> <span class="number">24</span> bit registers</span><br><span class="line"><span class="number">121</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">B1B3</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">122</span>. <span class="keyword">into</span> definitionblock code_regex . insert</span><br><span class="line"><span class="number">123</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">124</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(B1B3, 3, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">125. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">126. ​    Store(Arg2, Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">127. ​    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">128. ​    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">129. ​    Return(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">130. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">131. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">132</span>. </span><br><span class="line"><span class="number">133</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">B1B4</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">134</span>. <span class="keyword">into</span> definitionblock code_regex . insert</span><br><span class="line"><span class="number">135</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">136</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(B1B4, 4, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">137. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">138. ​    Store(Arg3, Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">139. ​    Or(Arg2, ShiftLeft(Local0, 8), Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">140. ​    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">141. ​    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">142. ​    Return(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">143. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">144. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">145</span>. </span><br><span class="line"><span class="number">146</span>. \# utility methods <span class="keyword">to</span> <span class="keyword">read</span>/<span class="keyword">write</span> buffers <span class="keyword">from</span>/<span class="keyword">to</span> EC</span><br><span class="line"><span class="number">147</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RE1B</span> <span class="title">parent_label</span> <span class="title">H_EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">148</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RECB</span> <span class="title">parent_label</span> <span class="title">H_EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">149</span>. <span class="keyword">into</span> device label H_EC insert</span><br><span class="line"><span class="number">150</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">151</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(RE1B, 1, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">152. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">153. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">154. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">155. ​    <span class="title">Return</span><span class="params">(BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">156. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">157. <span class="title">Method</span> <span class="params">(RECB, 2, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">158. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">159. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">160. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">161. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">162. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">163. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">164. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">165. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">166. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">167. ​        Store(RE1B(Arg0), Index(TEMP, Local0))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">168. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">169. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">170. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">171. ​    <span class="title">Return</span><span class="params">(TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">172. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">173. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">174</span>. </span><br><span class="line"><span class="number">175</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WE1B</span> <span class="title">parent_label</span> <span class="title">H_EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">176</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WECB</span> <span class="title">parent_label</span> <span class="title">H_EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">177</span>. <span class="keyword">into</span> device label H_EC insert</span><br><span class="line"><span class="number">178</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">179</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(WE1B, 2, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">180. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">181. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">182. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">183. ​    <span class="title">Store</span><span class="params">(Arg1, BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">184. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">185. <span class="title">Method</span> <span class="params">(WECB, 3, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">186. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">187. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">188. // <span class="title">Arg2</span> - <span class="title">value</span> <span class="title">to</span> <span class="title">write</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">189. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">190. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">191. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">192. ​    <span class="title">Store</span><span class="params">(Arg2, TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">193. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">194. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">195. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">196. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">197. ​        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">198. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">199. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">200. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">201. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">202. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">203</span>. </span><br><span class="line"><span class="number">204</span>. \# utility methods <span class="keyword">to</span> <span class="keyword">read</span>/<span class="keyword">write</span> buffers <span class="keyword">from</span>/<span class="keyword">to</span> EC</span><br><span class="line"><span class="number">205</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RE1B</span> <span class="title">parent_label</span> <span class="title">EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">206</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RECB</span> <span class="title">parent_label</span> <span class="title">EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">207</span>. <span class="keyword">into</span> device label EC insert</span><br><span class="line"><span class="number">208</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">209</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(RE1B, 1, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">210. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">211. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">212. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">213. ​    <span class="title">Return</span><span class="params">(BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">214. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">215. <span class="title">Method</span> <span class="params">(RECB, 2, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">216. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">217. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">218. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">219. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">220. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">221. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">222. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">223. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">224. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">225. ​        Store(RE1B(Arg0), Index(TEMP, Local0))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">226. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">227. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">228. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">229. ​    <span class="title">Return</span><span class="params">(TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">230. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">231. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">232</span>. </span><br><span class="line"><span class="number">233</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WE1B</span> <span class="title">parent_label</span> <span class="title">EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">234</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WECB</span> <span class="title">parent_label</span> <span class="title">EC</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">235</span>. <span class="keyword">into</span> device label EC insert</span><br><span class="line"><span class="number">236</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">237</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(WE1B, 2, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">238. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">239. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">240. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">241. ​    <span class="title">Store</span><span class="params">(Arg1, BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">242. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">243. <span class="title">Method</span> <span class="params">(WECB, 3, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">244. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">245. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">246. // <span class="title">Arg2</span> - <span class="title">value</span> <span class="title">to</span> <span class="title">write</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">247. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">248. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">249. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">250. ​    <span class="title">Store</span><span class="params">(Arg2, TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">251. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">252. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">253. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">254. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">255. ​        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">256. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">257. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">258. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">259. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">260. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">261</span>. </span><br><span class="line"><span class="number">262</span>. \# utility methods <span class="keyword">to</span> <span class="keyword">read</span>/<span class="keyword">write</span> buffers <span class="keyword">from</span>/<span class="keyword">to</span> EC</span><br><span class="line"><span class="number">263</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RE1B</span> <span class="title">parent_label</span> <span class="title">EC0</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">264</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">RECB</span> <span class="title">parent_label</span> <span class="title">EC0</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">265</span>. <span class="keyword">into</span> device label EC0 insert</span><br><span class="line"><span class="number">266</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">267</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(RE1B, 1, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">268. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">269. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">270. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">271. ​    <span class="title">Return</span><span class="params">(BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">272. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">273. <span class="title">Method</span> <span class="params">(RECB, 2, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">274. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">275. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">276. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">277. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">278. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">279. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">280. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">281. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">282. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">283. ​        Store(RE1B(Arg0), Index(TEMP, Local0))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">284. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">285. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">286. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">287. ​    <span class="title">Return</span><span class="params">(TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">288. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">289. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">290</span>. </span><br><span class="line"><span class="number">291</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WE1B</span> <span class="title">parent_label</span> <span class="title">EC0</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">292</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">WECB</span> <span class="title">parent_label</span> <span class="title">EC0</span> <span class="title">remove_entry</span>;</span></span><br><span class="line"><span class="number">293</span>. <span class="keyword">into</span> device label EC0 insert</span><br><span class="line"><span class="number">294</span>. <span class="keyword">begin</span></span><br><span class="line"><span class="number">295</span>. <span class="function"><span class="keyword">Method</span> <span class="params">(WE1B, 2, NotSerialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">296. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">297. ​    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">298. ​    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">299. ​    <span class="title">Store</span><span class="params">(Arg1, BYTE)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">300. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">301. <span class="title">Method</span> <span class="params">(WECB, 3, Serialized)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">302. // <span class="title">Arg0</span> - <span class="title">offset</span> <span class="title">in</span> <span class="title">bytes</span> <span class="title">from</span> <span class="title">zero</span>-<span class="title">based</span> <span class="title">EC</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">303. // <span class="title">Arg1</span> - <span class="title">size</span> <span class="title">of</span> <span class="title">buffer</span> <span class="title">in</span> <span class="title">bits</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">304. // <span class="title">Arg2</span> - <span class="title">value</span> <span class="title">to</span> <span class="title">write</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">305. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">306. ​    ShiftRight(Arg1, 3, Arg1)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">307. ​    Name(TEMP, Buffer(Arg1) &#123; &#125;</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">308. ​    <span class="title">Store</span><span class="params">(Arg2, TEMP)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">309. ​    <span class="title">Add</span><span class="params">(Arg0, Arg1, Arg1)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">310. ​    <span class="title">Store</span><span class="params">(0, Local0)</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">311. ​    <span class="title">While</span> <span class="params">(LLess(Arg0, Arg1)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">312. ​    <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">313. ​        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n</span></span></span><br><span class="line"><span class="function"><span class="comment">314. ​        Increment(Arg0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">315. ​        Increment(Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">316. ​    &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">317. &#125;\<span class="title">n</span></span></span><br><span class="line"><span class="function">318. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">319</span>. </span><br><span class="line"><span class="number">320</span>.#Fix Battery <span class="number">0</span>% Status</span><br><span class="line"><span class="number">321</span>.#Maintained <span class="keyword">by</span>: RehabMan <span class="keyword">for</span>: Laptop Patches</span><br><span class="line"><span class="number">322</span>.#system_Mutex.txt</span><br><span class="line"><span class="number">323</span>. </span><br><span class="line"><span class="number">324</span>.#</span><br><span class="line"><span class="number">325</span>.# Some DSDTs use Mutex objects <span class="keyword">with</span> non-zero a SyncLevel.  Evidently,</span><br><span class="line"><span class="number">326</span>.# OS X <span class="keyword">has</span> some difficulty <span class="keyword">with</span> this part <span class="keyword">of</span> the ACPI spec, either that </span><br><span class="line"><span class="number">327</span>.# <span class="keyword">or</span> the DSDTs are, <span class="keyword">in</span> fact, codec incorrectly <span class="keyword">and</span> Windows <span class="keyword">is</span> ignoring </span><br><span class="line"><span class="number">328</span>.# it.</span><br><span class="line"><span class="number">329</span>. </span><br><span class="line"><span class="number">330</span>.# The common <span class="keyword">result</span> <span class="keyword">of</span> a non-zero SyncLevel <span class="keyword">is</span> failure <span class="keyword">of</span> methods at the</span><br><span class="line"><span class="number">331</span>.# point <span class="keyword">of</span> Acquire <span class="keyword">on</span> the mutext <span class="keyword">in</span> question.  This can <span class="keyword">result</span> <span class="keyword">in</span> strange</span><br><span class="line"><span class="number">332</span>.# behavior, failed battery status, <span class="keyword">or</span> other issues.</span><br><span class="line"><span class="number">333</span>.#</span><br><span class="line"><span class="number">334</span>. # This patch corrects all Mutex objects declared <span class="keyword">with</span> a non-zero</span><br><span class="line"><span class="number">335</span>. # SyncLevel <span class="keyword">to</span> use zero.</span><br><span class="line"><span class="number">336</span>. #</span><br><span class="line"><span class="number">337</span>. </span><br><span class="line"><span class="number">338</span>. # <span class="number">2</span>x <span class="keyword">as</span> there <span class="keyword">is</span> some sort <span class="keyword">of</span> MaciASL bug...</span><br><span class="line"><span class="number">339</span>. # (code_regex_not seems broken)</span><br><span class="line"><span class="number">340</span>. #into_all all code_regex_not Mutex\s+\([^,]*,\s+<span class="number">0</span>x00\) code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">341</span>. #into_all all code_regex_not Mutex\s+\([^,]*,\s+<span class="number">0</span>x00\) code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">342</span>. </span><br><span class="line"><span class="number">343</span>. # <span class="number">10</span>x <span class="keyword">as</span> workaround <span class="keyword">for</span> MaciASL bug...</span><br><span class="line"><span class="number">344</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">345</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">346</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">347</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">348</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">349</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">350</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">351</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">352</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">353</span>. into_all all code_regex Mutex\s+\(([^,]*),\s+[^)]*\) replaceall_matched <span class="keyword">begin</span> Mutex(%<span class="number">1</span>, <span class="number">0</span>) <span class="keyword">end</span>;</span><br><span class="line"><span class="number">354</span>. </span><br><span class="line"><span class="number">355</span>. #Logic bug <span class="keyword">with</span> charging/discharging status (AC adapter detection)</span><br><span class="line"><span class="number">356</span>. #Some DSDTs suffer <span class="keyword">from</span> a logic bug <span class="keyword">where</span> at the point <span class="keyword">of</span> <span class="number">100</span>% capacity (fully charged battery), an incorrect #status <span class="keyword">is</span> returned <span class="keyword">from</span> _BST. This mostly affects certain ASUS laptops, but also a few others.</span><br><span class="line"><span class="number">357</span>. #Here <span class="keyword">is</span> a patch <span class="keyword">to</span> correct this problem:</span><br><span class="line"><span class="number">358</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">FBST</span> <span class="title">code_regex</span> <span class="title">If</span>\<span class="title">s</span>\<span class="params">(CHGS\s\(Zero\)</span>\)[\<span class="title">s</span>]+\<span class="comment">&#123;[\s]+Store\s\(0x02,\sLocal0\)[\s]+\&#125;</span>[\<span class="title">s</span>]+<span class="title">Else</span>[\<span class="title">s</span>]+\<span class="comment">&#123;[\s]+Store\s\(One,\sLocal0\)[\s]+\&#125;</span> <span class="title">replaceall_matched</span> <span class="title">begin</span></span></span><br><span class="line"><span class="function">359. <span class="title">If</span> <span class="params">(CHGS (Zero)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">360. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">361. ​     Store (0x02, Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">362. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">363. <span class="title">Else</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">364. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">365. ​     Store (Zero, Local0)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">366. &#125;</span></span></span><br><span class="line"><span class="function">367. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">368</span>. </span><br><span class="line"><span class="number">369</span>. #Fix HP OMEN Laptop Baterry <span class="keyword">to</span> enabled percentage <span class="keyword">and</span> discharge time</span><br><span class="line"><span class="number">370</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">SMWR</span> <span class="title">code_regex</span> <span class="title">If</span>\<span class="title">s</span>\<span class="params">(LNot\s\(ECOK\)</span>\)\<span class="title">s</span>+\<span class="comment">&#123;\s+Return\s\(0xFF\)\s+\&#125;</span> <span class="title">replaceall_matched</span> <span class="title">begin</span></span></span><br><span class="line"><span class="function">371. <span class="title">If</span> <span class="params">(LEqual (ECOK, One)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">372. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">373. ​     Return (0xFF)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">374. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">375. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">376</span>. </span><br><span class="line"><span class="number">377</span>. #Fix Hasee YOUYA Laptop Baterry <span class="keyword">to</span> enabled percentage <span class="keyword">and</span> discharge time</span><br><span class="line"><span class="number">378</span>. <span class="keyword">into</span> <span class="function"><span class="keyword">method</span> <span class="title">label</span> <span class="title">SMWR</span> <span class="title">code_regex</span> <span class="title">If</span>\<span class="title">s</span>\<span class="params">(LNot\s\(ECON\)</span>\)\<span class="title">s</span>+\<span class="comment">&#123;\s+Return\s\(0xFF\)\s+\&#125;</span> <span class="title">replaceall_matched</span> <span class="title">begin</span></span></span><br><span class="line"><span class="function">379. <span class="title">If</span> <span class="params">(LEqual (ECON, One)</span>)\<span class="title">n</span></span></span><br><span class="line"><span class="function">380. <span class="comment">&#123;\n</span></span></span><br><span class="line"><span class="function"><span class="comment">381. ​     Return (0xFF)\n</span></span></span><br><span class="line"><span class="function"><span class="comment">382. &#125;</span>\<span class="title">n</span></span></span><br><span class="line"><span class="function">383. <span class="title">end</span>;</span></span><br><span class="line"><span class="number">384</span>. </span><br><span class="line"><span class="number">385</span>. #<span class="keyword">into</span> definitionblock code_regex . insert</span><br><span class="line"><span class="number">386</span>. #<span class="keyword">begin</span></span><br><span class="line"><span class="number">387</span>. #<span class="keyword">External</span> (_SB.PCI0.BATC, DeviceObj)</span><br><span class="line"><span class="number">388</span>. #<span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>看起来这个补丁代码确实很复杂，但是仔细分析下，我们修改这个热补丁，无非需要以下这些数据：</p><ul><li><strong>电池的设备位置</strong></li><li><strong>额外添加的方法</strong></li><li><strong>拆分的字节数据</strong></li><li><strong>引用修改字节的方法(Method)</strong></li></ul><p>通过对于IOReg等的分析，我们得知电池设备为H_EC.BAT0；而对此字节补丁进行分析，我们发现，它实际上修改了这些字节数据：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BML0 </span>→ <span class="keyword">B1B2 </span>(ML00, ML01)</span><br><span class="line"><span class="keyword">BAV0 </span>→ <span class="keyword">B1B2 </span>(AV00, AV01)</span><br><span class="line"><span class="keyword">BAC0 </span>→ <span class="keyword">B1B2 </span>(AC00, AC01)</span><br><span class="line"><span class="keyword">BRC0 </span>→ <span class="keyword">B1B2 </span>(RC00 ,RC01)</span><br><span class="line"><span class="keyword">BTP0 </span>→ <span class="keyword">B1B2 </span>(TP00, TP01)</span><br><span class="line"><span class="keyword">BCC0 </span>→ <span class="keyword">B1B2 </span>(CC00, CC01)</span><br><span class="line"><span class="symbol">FCC0</span> → <span class="keyword">B1B2 </span>(FC00, FC01)</span><br><span class="line"><span class="keyword">BDC0 </span>→ <span class="keyword">B1B2 </span>(DC00, DC01)</span><br><span class="line"><span class="keyword">BDV0 </span>→ <span class="keyword">B1B2 </span>(DV00, DV01)</span><br><span class="line"><span class="keyword">BMD0 </span>→ <span class="keyword">B1B2 </span>(MD00, MD01)</span><br><span class="line"><span class="symbol">MANA</span> → RECB (<span class="number">0x30</span>, <span class="number">0x60</span>)</span><br><span class="line"><span class="symbol">DENA</span> → RECB (<span class="number">0x8C</span>, <span class="number">0x40</span>)</span><br><span class="line"><span class="symbol">CHEM</span> → <span class="keyword">B1B4 </span>(HEM0, HEM1, HEM2, HEM3)</span><br><span class="line"><span class="symbol">ATE0</span> → <span class="keyword">B1B2 </span>(TE00, TE01)</span><br></pre></td></tr></table></figure><p>这些字节数据全部位于H_EC下的ECF2这个OperationRegion中。随后，对这些拆分的字节添加的语句进行分析，我们也找到了我们需要添加的额外方法：<strong>RECB、RE1B、B1B2、B1B4</strong></p><p>接下来 ，我们前去阅读潮7000 13修改好电池后的DSDT（样本点击这里下载），通过反复查找对比我们前面找到的额外方法，我们可以发现，这些方法在以下这些DSDT方法中出现（也即<strong>引用修改字节的方法</strong>）：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">_SB<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.VPC0</span>下：</span><br><span class="line"></span><br><span class="line">MHIF、SMTF、GSBI</span><br><span class="line"></span><br><span class="line">_SB<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.BAT0</span>下：</span><br><span class="line"></span><br><span class="line">_BIF、_BST</span><br></pre></td></tr></table></figure><p>由此，我们确定了我们需要修改的所有地方，接下来我们就需要把这些修改注入到我们的热补丁中。</p><h2 id="数据插入"><a href="#数据插入" class="headerlink" title="数据插入"></a>数据插入</h2><p>接下来，我们就需要进行插入操作了。打开Maciasl软件(相关下载可在我博客的资源页面获取)，新建一个文件，插入以下这段代码，使其声明为一个热补丁文件；然后保存为DSL文本文件(文件名随意起，只要保证以”SSDT-“开头就好了)：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock (<span class="string">""</span>, <span class="string">"SSDT"</span>, <span class="number">2</span>, <span class="string">"hack"</span>, <span class="string">"xxxx"</span>, <span class="number">0x00000000</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的XXXX为你前面找到的电池设备名称，比如我的是BAT0，那这里就写为BAT0。</p><p>然后，复制DSDT中的电池字节OperationRegion到这个热补丁中，就像这样：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E5%A4%8D%E5%88%B6ecf2.png" alt="复制ecf2"></p><p>然后，我们将<strong>额外添加的方法</strong>与<strong>引用修改字节的方法(Method)</strong>同时插入到这个DSDT里面：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E6%8F%92%E5%85%A5%E6%96%B9%E6%B3%95.png" alt="插入方法"></p><p><strong>注意：在插入的时候，在同一个设备下面的方法一定要放到一块！</strong>比如<code>_BIF</code>与<code>_BST</code>同为<code>BAT0</code>设备下面的方法，在插入时就要放到一块。这样做的目的，是为了后面修改时方便修改，减少代码的书写以及使代码层次分明。</p><h2 id="添加位置代码"><a href="#添加位置代码" class="headerlink" title="添加位置代码"></a>添加位置代码</h2><p>到这里，我们并未完全完成代码的插入。我们需要BIOS知道我们插入的这些方法都是动态注入修补到哪些位置的方法，这需要我们添加位置代码。</p><p>比如，比如<code>_BIF</code>与<code>_BST</code>同为<code>BAT0</code>设备下面的方法，而<code>BAT0</code>位于<code>_SB.PCI0.LPCB.H_EC</code></p><p>。因此，我们需要在  <code>Method (_BIF, 0, NotSerialized)</code>前插入<code>Scope</code>位置代码，在<code>_BST</code>方法结束位置插入结束代码”}”。它看起来的效果应该像这样：</p><pre><code>Scope (_SB.PCI0.LPCB.H_EC.BAT0){        Method (_BIF, 0, NotSerialized)      {             ...     }     Method (_BST, 0, NotSerialized)      {             ...     }}</code></pre><p>同样地，对于<code>ECF2</code>这个OperationRegion，它的位置在<code>_SB.PCI0.LPCB.H_EC</code>，因此，应该像这样在<code>ECF2</code>下插入位置代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Scope (_SB<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span>)</span><br><span class="line">&#123;        </span><br><span class="line"> OperationRegion (ECF2, EmbeddedControl, Zero, <span class="number">0</span>xFF)</span><br><span class="line">            Field (ECF2, ByteAcc, Lock, Preserve)</span><br><span class="line">            &#123;</span><br><span class="line">            ...</span><br><span class="line">            &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>而对于RECB、RE1B、B1B2、B1B4这三个方法，由于其本身就在根设备下，因此不需要再额外添加位置代码，保留原有层级结构即可。</p><p>对所有我们刚才插入进来的代码进行位置代码插入，最终修改后，我们可以在左侧的窗格看到类似的层级结构：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E5%B1%82%E7%BA%A7.png" alt="层级"></p><p>在图里我们看到，所有方法，除了OperationRegion外，在层层展开下均能看见，并且位置正确，层级结构不错位；同时进行一下编译，也看不到任何与”}”有关的错误：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E6%97%A0%E5%B1%82%E7%BA%A7%E9%94%99%E8%AF%AF.png" alt="无层级错误"></p><h2 id="添加外部引用"><a href="#添加外部引用" class="headerlink" title="添加外部引用"></a>添加外部引用</h2><p>如果以上步骤皆操作正确，那么接下来你所看到的错误，将全部与添加外部引用有关，就像上图你看到的那样。这一部分的步骤主要就是添加外部引用。</p><p>首先注意下，我们的位置代码那里，有三个设备被引用，分别是<code>_SB.PCI0.LPCB.H_EC</code>、<code>_SB.PCI0.LPCB.H_EC.BAT0</code>和<code>_SB.PCI0.LPCB.H_EC.VPC0</code>。由于它们以Scope形式引用，必须要有设备声明，因此，我们需要添加这三个设备的外部引用到第2行下面，就像这样：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock (<span class="string">""</span>, <span class="string">"SSDT"</span>, <span class="number">2</span>, <span class="string">"hack"</span>, <span class="string">"BAT0"</span>, <span class="number">0</span>x00000000)</span><br><span class="line">&#123;</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span>, DeviceObj)</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.BAT0</span>, DeviceObj)</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.VPC0</span>, DeviceObj)</span><br><span class="line"></span><br><span class="line">    Scope (_SB<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span>)</span><br><span class="line">&#123; </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>其中<code>DeviceObj</code>表示这是一个ACPI设备。</p><p>编辑好后，我们再次编译，可以看到相关的报错全都消失了：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E7%BC%96%E8%AF%911.png" alt="编译1"></p><p>接下来，我们根据报错，继续在DSDT里搜索其他的报错代码，并添加相关引用。</p><p>比如对于<code>BASC</code>，我们在DSDT搜索：</p><p><img src="/2019/05/02/Battery Hotpatch Make/basc.png" alt="basc"></p><p>可以看到，这是<code>BAT0</code>下的一个<code>Name</code>变量，对应<code>IntObj</code>，添加外部引用如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DefinitionBlock (<span class="string">""</span>, <span class="string">"SSDT"</span>, <span class="number">2</span>, <span class="string">"hack"</span>, <span class="string">"BAT0"</span>, <span class="number">0</span>x00000000)</span><br><span class="line">&#123;</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span>, DeviceObj)</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.BAT0</span>, DeviceObj)</span><br><span class="line">    External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.VPC0</span>, DeviceObj)</span><br><span class="line">External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.BAT0</span><span class="selector-class">.BASC</span>, IntObj) <span class="comment">//这是插入的代码</span></span><br><span class="line"></span><br><span class="line">    Scope (_SB<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span>)</span><br><span class="line">&#123; </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>再次编译一下，会发现所有与<code>BASC</code>相关的报错全部消失：</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E7%BC%96%E8%AF%912.png" alt="编译2"></p><p>又比如，<code>_SB.PCI0.LPCB.H_EC</code>下的<code>ECMT</code>是<code>Mutex</code>变量，则对应<code>MutexObj</code>，添加：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.ECMT</span>, MutexObj)</span><br></pre></td></tr></table></figure><p><code>B1ST</code>则是：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.B1ST</span>, FieldUnitObj)</span><br></pre></td></tr></table></figure><p><code>MAMW</code>则是：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">External (_SB_<span class="selector-class">.PCI0</span><span class="selector-class">.LPCB</span><span class="selector-class">.H_EC</span><span class="selector-class">.MAMW</span>, MethodObj)</span><br></pre></td></tr></table></figure><p>……</p><p>通过这一系列外部引用添加，当你最后编译发现不再报错时，外部引用的添加就算结束。</p><p><img src="/2019/05/02/Battery Hotpatch Make/%E6%97%A0%E9%94%99.png" alt="无错"></p><h2 id="重命名-清空字节"><a href="#重命名-清空字节" class="headerlink" title="重命名/清空字节"></a>重命名/清空字节</h2><p>在上面的步骤完成之后，我们实际已经得到了一个基本成型的热补丁，但是这个热补丁到这还尚未修改完成，我们仍然需要两步来完成这个热补丁的修改。</p><p>首先，我们要把<code>ECF2</code>这个字节存放区域更名为一个与原来不一样的名字，比如<code>ECFX</code>。利用查找替换功能，我们可以很轻松完成这个步骤。</p><p>接下来，我们需要把所有不拆分的字节数据段名字去掉，只保留空位。以我的为例，它就像这样：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">Scope (_SB.PCI0.LPCB.H_EC)</span><br><span class="line">&#123; </span><br><span class="line">        OperationRegion (ECFX, EmbeddedControl, Zero, <span class="number">0xFF</span>)</span><br><span class="line">        Field (ECFX, ByteAcc, Lock, Preserve)</span><br><span class="line">        &#123;</span><br><span class="line">            Offset (<span class="number">0x0E</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">16</span>,</span><br><span class="line">            ML00,   <span class="number">8</span>, </span><br><span class="line">            ML01,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">16</span>,</span><br><span class="line">            AV00,   <span class="number">8</span>, </span><br><span class="line">            AV01,   <span class="number">8</span>, </span><br><span class="line">            AC00,   <span class="number">8</span>, </span><br><span class="line">            AC01,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x1C</span>), </span><br><span class="line">            RC00,   <span class="number">8</span>, </span><br><span class="line">            RC01,   <span class="number">8</span>, </span><br><span class="line">            TP00,   <span class="number">8</span>, </span><br><span class="line">            TP01,   <span class="number">8</span>, </span><br><span class="line">            CC00,   <span class="number">8</span>, </span><br><span class="line">            CC01,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            ,   <span class="number">16</span>,</span><br><span class="line">            FC00,   <span class="number">8</span>, </span><br><span class="line">            FC01,   <span class="number">8</span>, </span><br><span class="line">            DC00,   <span class="number">8</span>, </span><br><span class="line">            DC01,   <span class="number">8</span>, </span><br><span class="line">            DV00,   <span class="number">8</span>, </span><br><span class="line">            DV01,   <span class="number">8</span>, </span><br><span class="line">            MD00,   <span class="number">8</span>, </span><br><span class="line">            MD01,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            ,   <span class="number">96</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x42</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x4A</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x4D</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x50</span>), </span><br><span class="line">            ,   <span class="number">8</span>,  </span><br><span class="line">            Offset (<span class="number">0x52</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            Offset (<span class="number">0x64</span>), </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            Offset (<span class="number">0x65</span>), </span><br><span class="line">            ,   <span class="number">4</span>, </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            ,   <span class="number">1</span>, </span><br><span class="line">            ,   <span class="number">8</span>,             </span><br><span class="line">            Offset (<span class="number">0x8B</span>), </span><br><span class="line">            ,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">64</span>, </span><br><span class="line">            HEM0,   <span class="number">8</span>, </span><br><span class="line">            HEM1,   <span class="number">8</span>, </span><br><span class="line">            HEM2,   <span class="number">8</span>, </span><br><span class="line">            HEM3,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            ,   <span class="number">16</span>, </span><br><span class="line">            TE00,   <span class="number">8</span>, </span><br><span class="line">            TE01,   <span class="number">8</span>, </span><br><span class="line">            TF00,   <span class="number">8</span>, </span><br><span class="line">            TF01,   <span class="number">8</span>, </span><br><span class="line">            ,   <span class="number">64</span>, </span><br><span class="line">            ,   <span class="number">128</span>, </span><br><span class="line">            Offset (<span class="number">0xC6</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面的修改有几个要点：</p><ul><li><strong>只清空不拆分的字节</strong></li></ul><p>  对于<strong>未拆分的字节数据</strong>，就需要清空变量名，后面的数据保持不动。</p><p>  比如：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ACST,</span>   <span class="number">1</span>,</span><br></pre></td></tr></table></figure><p>​        这一行，清空变量名，就是：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">,   <span class="number">1</span>,</span><br></pre></td></tr></table></figure><p>​        而那些<strong>拆分的字节数据</strong>，则不要去动，跳过去。</p><ul><li><strong>删除无拆分的offset块</strong></li></ul><p>  如果两个<code>offset</code>块之间，没有任何<strong>拆分的字节数据</strong>，则这个块可以删除。比如对于我的而言：</p>  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">TE00,   <span class="number">8</span>, </span><br><span class="line">        TE01,   <span class="number">8</span>, </span><br><span class="line">        TF00,   <span class="number">8</span>, </span><br><span class="line">        TF01,   <span class="number">8</span>, </span><br><span class="line">        ,   <span class="number">64</span>, </span><br><span class="line">        ,   <span class="number">128</span>, </span><br><span class="line">        Offset (<span class="number">0xC6</span>), </span><br><span class="line">        ,   <span class="number">8</span>, </span><br><span class="line">        ...</span><br><span class="line">        Offset (<span class="number">0xF1</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>  从<code>Offset (0xC6),</code>到<code>Offset (0xF1)</code>中间，再也没有任何<strong>拆分的字节数据</strong>，因此，我们可以抛弃这块的变量，只保留<code>Offset (0xC6)</code>，修改为：</p><pre><code>                  ...                      TE00,   8,       TE01,   8,       TF00,   8,       TF01,   8,       ,           64,       ,           128,       Offset (0xC6)  //此行之后的字节数据删除，并将末尾逗号去掉，表示到此结束}</code></pre><p>这一块修改完成后，进行编译。如无报错，则将文件保存编译为aml文件。至此，我们的电池热补丁制作完成。</p><h1 id="添加改名补丁"><a href="#添加改名补丁" class="headerlink" title="添加改名补丁"></a>添加改名补丁</h1><p>接下来的过程，就与其他热补丁的改名过程无异了，我们需要生成并在Clover配置文件中添加<strong>引用修改字节的方法</strong>(需要注入Tgtbridge)。关于如何生成并添加这一补丁，我在我的触摸板教程第二版中有详细描述，不明白的可以点击<a href="http://bbs.pcbeta.com/viewthread-1797378-1-1.html" target="_blank" rel="noopener">这里</a>查看参考。对于潮7000 13寸来说，需要添加的是这些改名补丁：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Name:</span> change MHIF to XHIF <span class="keyword">in</span> VPC0</span><br><span class="line"><span class="symbol">Find:</span> <span class="number">4</span>D484946</span><br><span class="line"><span class="symbol">Replace:</span> <span class="number">58484946</span></span><br><span class="line"><span class="symbol">TgtBridge:</span> <span class="number">56504330</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Name:</span> change SMTF to XMTF <span class="keyword">in</span> VPC0</span><br><span class="line"><span class="symbol">Find:</span> <span class="number">534</span>D5446</span><br><span class="line"><span class="symbol">Replace:</span> <span class="number">584</span>D5446</span><br><span class="line"><span class="symbol">TgtBridge:</span> <span class="number">56504330</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Name:</span> change GSBI to XSBI  <span class="keyword">in</span> BAT0</span><br><span class="line"><span class="symbol">Find:</span> <span class="number">47534249</span></span><br><span class="line"><span class="symbol">Replace:</span> <span class="number">58534249</span></span><br><span class="line"><span class="symbol">TgtBridge:</span> <span class="number">42415430</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Name:</span> change _BIF to XBIF <span class="keyword">in</span> BAT0</span><br><span class="line"><span class="symbol">Find:</span> <span class="number">5</span>F424946</span><br><span class="line"><span class="symbol">Replace:</span> <span class="number">58424946</span></span><br><span class="line"><span class="symbol">TgtBridge:</span> <span class="number">42415430</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Name:</span> change _<span class="keyword">BST</span> to XBST <span class="keyword">in</span> BAT0</span><br><span class="line"><span class="symbol">Find:</span> <span class="number">5</span>F425354</span><br><span class="line"><span class="symbol">Replace:</span> <span class="number">58425354</span></span><br><span class="line"><span class="symbol">TgtBridge:</span> <span class="number">42415430</span></span><br></pre></td></tr></table></figure><p>接下来，保存修改后的配置文件，将新配置文件与热补丁放入对应位置，删除DSDT，重启测试。如果修改没有问题，那么电池应该会如在DSDT下一般正常工作了。祝你好运！</p><p>本教程所涉及的配置文件、热补丁与电池DSDT打包可以点击<a href="https://pan.baidu.com/s/1DppbiF2OEmAxbo9lnZXajA" target="_blank" rel="noopener">这里</a>下载。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这个教程，是基于宪武大神的口述，加上博主的亲身实践并精心整理而成的，且发布已经得到宪武大神的授权，任何其他形式的转载请注明出处！！！教程并不
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="DSDT" scheme="http://yoursite.com/tags/DSDT/"/>
    
      <category term="电池" scheme="http://yoursite.com/tags/%E7%94%B5%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>联想小新潮7000 EFI 3.4更新</title>
    <link href="http://yoursite.com/2019/05/02/Lenovo%20Xiaoxin%20Chao7000%20EFI%203.4%20Update/"/>
    <id>http://yoursite.com/2019/05/02/Lenovo Xiaoxin Chao7000 EFI 3.4 Update/</id>
    <published>2019-05-02T12:02:53.000Z</published>
    <updated>2019-05-02T12:25:08.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然现在仍然处于休假调整状态，既没有管理论坛，也没有为任何坛友群友解答黑果问题，不过，这几天我也并未放飞自我。</p><p>最近几天除了忙着我的APP之外，剩余的时间 ，便是苦心钻研13寸的热补丁以及触摸问题（也就是上个版本3.3合并13寸工程之后遗留的问题）。在宪武大神的帮助下，我成功的完成了这两个问题的修复，现在将这个新的release奉献出来！</p><h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><p>本版本的更新如下：</p><p><strong>1、修复13寸的触摸板、电池（电池以热补丁形式放送）</strong><br><strong>2、修复MakeInstall脚本的安装问题3、修复获取Root权限时卡顿的问题（帖子详情见<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1812478&highlight=NoTouchID" target="_blank" rel="noopener">这里</a>）</strong></p><p>本来预想是在这个版本加入VoodooI2C的2.1.6最新版，但由于目前2.1.6存在重大问题，考虑本版本追求稳定的因素，目前暂时不予合并，有需要的同学可自行下载食用。</p><p><strong>另：经确认，部分18款本子，DSDT与潮7000 13寸/14寸（81bs）基本一致，安装时，安装此版本的即可。部分18款本子的触摸版型号为SYNA2395，需要进一步适配，这类同学请等待适配。</strong></p><p>全版本统一下载地址：<a href="https://pan.baidu.com/s/1QcrvxI5a68eUH37RmNd-Fg#list/path=%2F" target="_blank" rel="noopener">点我下载</a></p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>目前存在的已知问题有：</p><p><strong>1、摄像头问题（老生无解）</strong><br><strong>2、VoodooI2C右键问题（求Alex早日找出问题……）</strong></p><p>其他问题有待各位反馈。</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p>谨在此向所有为本版本更新作出贡献的人致谢！！！！</p><p>@宪武   电池热补丁指导<br>@<a href="http://i.pcbeta.com/space-uid-4806942.html" target="_blank" rel="noopener">maple枫舞</a>  卡顿问题贡献<br>@Acidanthera  Lilu以及NoTouchID<br>@Toronto  MakeInstall脚本修正  测试<br>@<a href="http://i.pcbeta.com/space-uid-1148352.html" target="_blank" rel="noopener">zhoufeng1209</a>  测试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;虽然现在仍然处于休假调整状态，既没有管理论坛，也没有为任何坛友群友解答黑果问题，不过，这几天我也并未放飞自我。&lt;/p&gt;
&lt;p&gt;最近几天除了忙
      
    
    </summary>
    
      <category term="EFI" scheme="http://yoursite.com/categories/EFI/"/>
    
    
      <category term="更新" scheme="http://yoursite.com/tags/%E6%9B%B4%E6%96%B0/"/>
    
      <category term="Config" scheme="http://yoursite.com/tags/Config/"/>
    
  </entry>
  
  <entry>
    <title>VoodooI2C编译教程</title>
    <link href="http://yoursite.com/2019/01/24/VoodooI2C%20Build/"/>
    <id>http://yoursite.com/2019/01/24/VoodooI2C Build/</id>
    <published>2019-01-24T13:13:32.000Z</published>
    <updated>2019-12-24T08:35:00.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本文由本人原创，教程已首发黑苹果乐园下，<a href="https://imac.hk/build-voodooi2c-kext.html" target="_blank" rel="noopener">点击这里查看</a>。未经本人与黑苹果乐园官方允许，严禁转载抄袭！！！！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>对于目前绝大多数新本来说，使用VoodooI2C驱动触摸板是必不可少的。但是很多同学会很头疼Release驱动的各种问题（比如2.1.4版本的内核泄漏问题……），于是这个时候，编译最新版本驱动就成了几乎唯一的选择。编译最新的驱动可以获得最新的问题修改并获得新功能。</p><p>当然对于大多数小白而言，编译驱动似乎遥不可及，甚至是天方夜谭。不过我想说的是，不要自己吓自己。接下来，我就来告诉各位小白：编译并用上最新的VoodooI2C，其实没那么难……</p><h1 id="安装相关环境"><a href="#安装相关环境" class="headerlink" title="安装相关环境"></a>安装相关环境</h1><p>编译任何Mac驱动，我们都离不开Xcode工具，它是我们编译驱动的好帮手。下载Xcode十分简单，只需要在Mac App Store搜索并下载即可。当然了，如果你的黑果尚不能访问App Store，你也可以点击<a href="https://developer.apple.com/xcode/" target="_blank" rel="noopener">这里</a>下载。</p><p>注意在这里下载前，要先注册一个Apple ID。</p><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><p>VoodooI2C项目由本体以及依赖和目标驱动三块组成。为了管理方便，作者亚历山大将其使用Submodule分割在了不同的仓库里。当我们编译的时候，就需要保证它们都在正确的位置才可以正常编译。</p><p>由于操作命令行终端对于大多数小白是困难的，所以我这里不介绍如何使用git同步源码了，这里只介绍如何去github页面下载。</p><p>以VoodooI2C的下载为例：</p><p>1、 进入<a href="https://github.com/alexandred" target="_blank" rel="noopener">亚历山大的github源</a>(不得不说我亚历山大长得蛮帅的~)</p><p><img src="/2019/01/24/VoodooI2C Build/%E4%BA%9A%E5%8E%86%E5%B1%B1%E5%A4%A7.png" alt="img"></p><p>2、点击repositories </p><p><img src="/2019/01/24/VoodooI2C Build/%E6%BA%90.png" alt="img"></p><p>2、 点击VoodooI2C进入，就可以看到源码以及说明</p><p><img src="/2019/01/24/VoodooI2C Build/%E6%BA%90%E7%A0%81.png" alt="img"></p><p>3、 按照图示，依次点击下载</p><p><img src="/2019/01/24/VoodooI2C Build/%E4%B8%8B%E8%BD%BD.png" alt="img"></p><p>等待下载完成后，我们就可以得到一份VoodooI2C源码了。</p><p>同样地，依照此法，我们下载VoodooGPIO以及你的目标驱动源码。需要注意，下载得到的文件夹，要去掉-master后缀，对应放入VoodooI2C的文件夹下（VoodooGPIO放入dependencies，目标驱动放入VoodooI2C Satellite）。弹出替换提示不用管，直接替换就好。这样，我们待编译的源码就准备完毕了。</p><h1 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h1><p>接下来，我们用Xcode打开源码文件夹根目录的VoodooI2C.xcworkspace文件。此时会弹出一个英文对话框，提示你此项目为网上下载，是否打开。点击open打开。</p><p><img src="/2019/01/24/VoodooI2C Build/%E6%89%93%E5%BC%80.png" alt="img"></p><p>然后，我们需要删除两个关键的条目来保证编译成功。点击左侧VoodooI2C蓝色项目，然后在右侧点击Build Phases。</p><p><img src="/2019/01/24/VoodooI2C Build/%E5%88%A0%E9%99%A4.png" alt="img"></p><p>图中画圈的两个条目我们不需要，删除它。然后我们点击左上角的编译按钮（一个类似播放的图标），驱动源码就会开始编译。</p><p><img src="/2019/01/24/VoodooI2C Build/building.jpg" alt="img"></p><p>当显示build succeed  时，我们编译成功</p><p><img src="/2019/01/24/VoodooI2C Build/%E6%88%90%E5%8A%9F.jpg" alt="img"></p><p>接下来，展开左侧窗格的product文件夹</p><p><img src="/2019/01/24/VoodooI2C Build/%E5%B1%95%E5%BC%80.png" alt="img"></p><p>右击VoodooI2C.kext，选择show in finder，就可以看见编译好的驱动。</p><p><img src="/2019/01/24/VoodooI2C Build/%E9%A9%B1%E5%8A%A8.png" alt="img"></p><p>到这里，我们的编译就算完成了，尽情享用你的新驱动吧~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;声明&quot;&gt;&lt;a href=&quot;#声明&quot; class=&quot;headerlink&quot; title=&quot;声明&quot;&gt;&lt;/a&gt;声明&lt;/h1&gt;&lt;p&gt;本文由本人原创，教程已首发黑苹果乐园下，&lt;a href=&quot;https://imac.hk/build-voodooi2c-kext.html
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="编译" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="I2C" scheme="http://yoursite.com/tags/I2C/"/>
    
      <category term="驱动" scheme="http://yoursite.com/tags/%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>联想潮7000 14 EFI 3.2更新</title>
    <link href="http://yoursite.com/2019/01/23/Lenovo%20Xiaoxin%20Chao7000%2014%20EFI%203.2%20Update/"/>
    <id>http://yoursite.com/2019/01/23/Lenovo Xiaoxin Chao7000 14 EFI 3.2 Update/</id>
    <published>2019-01-23T13:20:00.000Z</published>
    <updated>2019-05-02T12:08:04.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>伴随14.3更新的到来 ，我也及时更新了EFI。本来这个版本应该和13寸的EFI一起发布，但是考虑更新14.3的需要，我决定提前放出来这个版本的更新。</p><h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><p>本次更新内容不多，更新了以下内容：</p><p><strong>1、修复HDMI输出问题</strong><br><strong>2、移除旧版VoodooSDHC驱动，添加新的读卡器驱动（有待测试）</strong><br><strong>3、移除12系列的配置文件（从本版本起停止对Sierra系列的支持）</strong><br><strong>4、更新四叶草版本至4895，支持14.3安装使用</strong></p><p><strong>需要注意，由于目前13寸的热补丁移植尚存在问题，因此暂时不能将13寸项目合并，请见谅……</strong></p><p>全版本统一下载地址：<a href="https://pan.baidu.com/s/1QcrvxI5a68eUH37RmNd-Fg#list/path=%2F" target="_blank" rel="noopener">点我下载</a></p><p>在EFI包解压后根部的Sinetek-rtsk驱动即为读卡器驱动，这个驱动来自：<a href="https://github.com/sinetek/Sinetek-rtsx" target="_blank" rel="noopener">sinetek/Sinetek-rtsx</a>，此驱动为瑞昱读卡器驱动（仍然在开发），机型读卡器经过本人对比查找为RTS5229，受此驱动支持。此驱动必须放入SLE目录并重建缓存然后才能使用，放在四叶草会引起错误，L/E未测试。目前尚未测试插卡，需要测试。</p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p>目前存在的已知问题有：</p><p><strong>1、摄像头问题（老生无解）</strong><br><strong>2、VoodooI2C右键问题（求Alex早日找出问题……）</strong></p><p>其他问题有待各位反馈。目前先更新到这。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;伴随14.3更新的到来 ，我也及时更新了EFI。本来这个版本应该和13寸的EFI一起发布，但是考虑更新14.3的需要，我决定提前放出来这个版
      
    
    </summary>
    
      <category term="EFI" scheme="http://yoursite.com/categories/EFI/"/>
    
    
      <category term="更新" scheme="http://yoursite.com/tags/%E6%9B%B4%E6%96%B0/"/>
    
      <category term="Config" scheme="http://yoursite.com/tags/Config/"/>
    
  </entry>
  
  <entry>
    <title>VoodooI2C触摸板驱动教程</title>
    <link href="http://yoursite.com/2019/01/06/VoodooI2C%20DSDT%20Edit/"/>
    <id>http://yoursite.com/2019/01/06/VoodooI2C DSDT Edit/</id>
    <published>2019-01-06T05:53:19.000Z</published>
    <updated>2019-12-24T08:36:21.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇博客文章，是我在远景发布的教程：<a href="http://bbs.pcbeta.com/viewthread-1791962-1-1.html" target="_blank" rel="noopener">【他山之石，可以攻玉】黑苹果 I2C 触摸板驱动教程（分步）</a>和<a href="http://bbs.pcbeta.com/viewthread-1797378-1-1.html" target="_blank" rel="noopener">【积谷于此，以至四方】黑苹果 I2C 触摸驱动教程（第二版）</a>的姊妹篇。本博客整合了两版帖子（权且定为第三版吧，嘻嘻~）。如远景所言，这篇教程来自 <strong>Alexandred</strong> 的<a href="https://voodooi2c.github.io/" target="_blank" rel="noopener"> VoodooI2C 驱动教程官网</a>，本文基本忠实原文，并尽可能结合我的经验来谈如何修改 DSDT 驱动自己的 I2C 触摸板。</p><p>在这篇教程即将开始之前，也欢迎各位加入我的黑苹果触摸板驱动 QQ 群 1：<strong>837538729</strong> QQ 群 2：<strong>921143329</strong>，来询问相关问题。我会尽可能为大家解决问题。</p><hr><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="参数收集"><a href="#参数收集" class="headerlink" title="参数收集"></a>参数收集</h2><p> “<strong>工欲善其事，必先利其器</strong>”。对于 I2C 触摸板来说，首先要做的是明确你的触摸板是不是 I2C 触摸板。 明确了这一点，我们才能有的放矢，根据自己触摸板类型去有针对性地驱动自己的触摸板。 </p><p> 确认自己的设备是不是 I2C 设备其实很简单，在 win 下打开设备管理器，找到人体学输入设备，如果是 I2C 设备，那么现在你应该能看到一个 I2C HID(I2C USB) 设备： </p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E5%B1%9E%E6%80%A7.jpg" alt="属性"></p><p> 如果你能看到这个设备，说明你的触摸板是 I2C触摸板。否则，你的触摸板就是 PS2 类型的，请安装 <strong>VoodooPS2Controller</strong> 或者 <strong>AppleSmartTouchpad</strong>。（下载地址请参见博客的资源页面）</p><p> 另外需要注意：你需要确认自己的 CPU 平台以及架构代号。一般来说，根据后面 4 位数字型号的第一位，可以推测你的 Intel CPU 为几代 CPU，以及对应的架构。目前支持的架构有这些：</p><p><strong>4 - Haswell</strong></p><p><strong>5 - Broadwell</strong></p><p><strong>6 - Skylake</strong></p><p><strong>7 - Kaby Lake</strong></p><p><strong>8 - Kaby Lake R / Coffee Lake / Cannon Lake / Whiskey Lake……</strong></p><p>如果你的 CPU 低于 4 代，VoodooI2C 是不能在其上工作的。 </p><p>对于 VoodooI2C 来说，它能识别下面硬件 ID 的 I2C 设备： </p><p><strong>‘INT33C2’ 和 ‘INT33C3’ - Haswell</strong></p><p><strong>‘INT3432’ 和 ‘INT3433’ - Broadwell</strong></p><p><strong>‘pci8086,9d60’, ‘pci8086,9d61’, ‘pci8086,9d62’, ‘pci8086,9d63’, ‘pci8086,a160’ 和 ‘pci8086,a161’ - Skylake / Kaby Lake / Kaby Lake R</strong></p><p> <strong>‘pci8086,9de8’, ‘pci8086,9de9’, ‘pci8086,a368’ 和 ‘pci8086,a369’ - Coffee Lake / Cannon Lake / Whiskey Lake</strong></p><p> 如果你确认了你的触摸板/触摸屏是 I2C 设备并且在支持列表里，那么接下来你就可以继续进行你的准备工作。<strong>需要说明的是，对于 I2C USB 设备来说，接下来的步骤都没有必要，请直接移步安装步骤！！！</strong></p><h2 id="寻找对应的ACPI模块"><a href="#寻找对应的ACPI模块" class="headerlink" title="寻找对应的ACPI模块"></a>寻找对应的ACPI模块</h2><hr><hr><p>在 DSDT 里，I2C 触摸设备会对应其 BIOS 设备名称下面，但是在一个完整的 DSDT 里，I2C 设备肯定不止一个，所以我们必须通过找出触摸板的 BIOS 设备名称来定位触摸板的 DSDT 代码片段。方法如下： </p><p>1、打开设备管理器，找到 I2C HID 设备，双击打开属性 </p><p>2、进入详细信息，点击下拉菜单，找到 “ BIOS 设备名称” 一项，并将它记录下来</p><p>(有几个记录几个)</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/BIOS%E8%AE%BE%E5%A4%87%E5%90%8D%E7%A7%B0.jpg" alt="BIOS设备名称"></p><p> 这样，我们就完成了寻找对应的 ACPI 模块的操作。一般来说，I2C 触摸设备名字是这些中的一个(<strong>但并不绝对</strong>)：</p><p>触摸板：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TPDX,</span> ELAN, SYNA, CYPR, TPAD, ETPD</span><br></pre></td></tr></table></figure><p>触摸屏：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TPLX,</span> ELAN, ETPD, SYNA, ATML</span><br></pre></td></tr></table></figure><p><strong>注意：这里的 X 代表某一个数字</strong></p><hr><h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><hr><hr><p>修改 DSDT 我们需要用到两款工具软件： IORegistryExplorer, Maciasl </p><p>这里这两款软件都有特殊的要求。IORegistryExplorer 要求为 2.1 版本，Maciasl要求为 Rehabman 大神的编译版,下载地址见博客资源。</p><h2 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h2><p> VoodooI2C 要求必须运行在 Clover（四叶草），除此之外，一个稳定的 Mac 环境也是先决条件，确保在驱动触摸板前你的显卡和电池电量显示已经正常工作，并且你还需要提取好一份完整的DSDT。这个地方我不想过多解释DSDT相关基础知识，有需要了解的请移步<a href="https://blog.csdn.net/wr132/article/details/54798754/" target="_blank" rel="noopener">这里</a>。 </p><p> 在这些工作完成之后，我们就可以开始下载 VoodooI2C 驱动。 最好的获取方法是进入 Github 获取最新的驱动(<a href="https://github.com/alexandred/VoodooI2C/releases" target="_blank" rel="noopener">下载地址</a>)。在 Releases 下的驱动最稳定。</p><p> 下载 Releases 的压缩包后，我们解压，会得到 1 个核心驱动和 5 个目标驱动，对 VoodooI2C 来说，它需要两个驱动来完成工作：VoodooI2C.kext（核心驱动）+ 一个目标驱动。 </p><p> 我们一共有四个目标驱动可供选择，它们的区别见下表：</p><table><thead><tr><th align="left">驱动名称</th><th align="left">功能</th><th align="left">轮询模式</th><th align="left">中断模式</th><th align="left">是否需要调整 IONameMatch</th></tr></thead><tbody><tr><td align="left"><strong>VoodooI2CELAN</strong></td><td align="left">支持 ELAN 触摸板</td><td align="left">❌</td><td align="left">✔️</td><td align="left">✔️</td></tr><tr><td align="left"><strong>VoodooI2CHID</strong></td><td align="left">支持大多数 I2C HID 多点触摸设备</td><td align="left">✔️</td><td align="left">✔️</td><td align="left">❌</td></tr><tr><td align="left"><strong>VoodooI2CUPDDEngine</strong></td><td align="left">UPDD 多点触控引擎</td><td align="left">❌</td><td align="left">✔️</td><td align="left">✔️</td></tr><tr><td align="left"><strong>VoodooI2CFTE</strong></td><td align="left">支持 FTE 触摸板</td><td align="left">❌</td><td align="left">✔️</td><td align="left">✔️</td></tr></tbody></table><hr><hr><h1 id="准备修改"><a href="#准备修改" class="headerlink" title="准备修改"></a>准备修改</h1><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><p> 我们修改DSDT的目的，其核心在于让驱动识别触摸板的 GPIO 控制器，从而让驱动识别触摸板。对于极少的笔记本来说（如使用 Haswell 和 Boardwell 的设备），由于 GPIO 控制器本身就已经可以驱动，所以这类设备通常不需要打补丁也可以正常使用 VoodooI2C。</p><p> VoodooI2C 支持三种模式： <strong>APIC 中断模式，GPIO 中断模式</strong>与<strong>轮询模式</strong>，这三种模式各有特点：APIC 中断基本不需要进行修改，功能完美，但是仅有极少数设备支持，GPIO 中断模式功能支持比较完善，但是修改量通常比较大，而且有可能出现 BUG 或者占用资源过高的问题（当然也更容易五国）（现在按理来说可以通过修补 FMCN &amp; SSCN 来解决）；而轮询模式是一种非常低效的模式，功能的支持可能会不太完善，不过轮询模式相比较中断模式而言适用范围更广。</p><p> 这两种模式究竟使用哪一种，需要结合你的 DSDT 代码和使用的驱动来定。目前能够同时支持这两种模式的驱动只有 <strong>VoodooI2CHID</strong>。</p><h2 id="补丁应用"><a href="#补丁应用" class="headerlink" title="补丁应用"></a>补丁应用</h2><p> 无论你使用哪一种工作模式，你首先都需要给你的 DSDT 应用 Windows 补丁。这个补丁可以在补丁源下面找到，根据你的出厂 Windows 系统版本来应用补丁就好，一般我们用的比较多的都是 Windows 10 Patch。</p><p> 如果你运行在 Skylake 的 CPU 下，通常你需要应用补丁源下的 SKL I2C Controller 补丁。这个补丁对于 Skylake 不一定会起作用，但是通常打上这个补丁也不会出什么问题，所以最好是应用这个补丁。</p><p> 如果你是 Skylake 平台或以上，那么如果想使用 GPIO 中断模式，你就必须对 GPIO 打补丁。应用补丁源下 GPIO Controller 补丁（中断模式）。</p><p>下面，就针对这轮询和中断这两种方式进行 DSDT 修改讲解。</p><hr><hr><h1 id="DSDT-修改"><a href="#DSDT-修改" class="headerlink" title="DSDT 修改"></a>DSDT 修改</h1><h2 id="中断模式"><a href="#中断模式" class="headerlink" title="中断模式"></a>中断模式</h2><p>接下来我们先介绍 GPIO 中断模式。这里的情况比较复杂，在做这项工作之前，请务必<strong>备份好自己的原有 DSDT</strong>，然后进行修改。<strong>注意：接下来的 DSDT 修改全都在你的触摸设备代码下进行，不要去修改其他地方！！！</strong></p><h3 id="确认你的中断控制器类型"><a href="#确认你的中断控制器类型" class="headerlink" title="确认你的中断控制器类型"></a>确认你的中断控制器类型</h3><p>这一步需要确认你的中断控制器究竟是何种类型，在没有安装 VoodooI2C 驱动时，打开 IORegistryExplorer，搜索前面保存的 BIOS 设备名称，然后定位到 IOinterruptSpecifiers一项</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/iointerrupt.png" alt="iointerrupt"></p><p>可以看到，窗口出现了一组十六进制数值。其中，最前面的两位数称为<strong>APIC pin值</strong>，这个值是你后面 DSDT 修改的重要依据，把它记录下来。</p><p>如果你没有 IOinterruptSpecifiers 这一项或者 APIC pin 值不大于 2F（十六进制如何比较大小请自行百度），那么请移步到安装步骤。（此处有概率有例外）</p><h3 id="移除-APIC-中断控制器-相关代码"><a href="#移除-APIC-中断控制器-相关代码" class="headerlink" title="移除 APIC 中断控制器 相关代码"></a>移除 APIC 中断控制器 相关代码</h3><p>VoodooI2C在以 GPIO 中断模式调用DSDT中触摸设备的_CRS方法时，一律使用 SBFG 参数而不是 SBFI 参数。因此到这里，我们需要对 CRS 方法进行修改，使其正确返回 SBFG 的值。</p><p>用 MaciASL 打开你的 DSDT，然后搜索 SBFG （或者你的设备名），定位并仔细翻阅，你应该会找到一段类似于这样的代码：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">Method</span> <span class="params">(_CRS, 0, Serialized)</span>  // _<span class="title">CRS</span>:</span> Current Resource Settings               </span><br><span class="line"><span class="comment">&#123;                   </span></span><br><span class="line"><span class="comment">         Name (SBFI, ResourceTemplate ()                   </span></span><br><span class="line"><span class="comment">         &#123;                       </span></span><br><span class="line"><span class="comment">                   I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,                           </span></span><br><span class="line"><span class="comment">                              AddressingMode7Bit, "\\_SB.PCI0.I2C1",                            </span></span><br><span class="line"><span class="comment">                              0x00, ResourceConsumer, , Exclusive,                            </span></span><br><span class="line"><span class="comment">                               )                       </span></span><br><span class="line"><span class="comment">                   Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )                        </span></span><br><span class="line"><span class="comment">                   &#123;                           </span></span><br><span class="line"><span class="comment">                               0x0000006D,                        </span></span><br><span class="line"><span class="comment">                   &#125;</span>                    </span><br><span class="line">                &#125;)                   </span><br><span class="line">                Return (SBFI)                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到之后，首先要将 SBFI 更名为 SBFB，并删除下段代码：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">                   Interrupt (ResourceConsumer, Level, ActiveLow, </span><br><span class="line"><span class="built_in">Exclusive,</span> ,, )    </span><br><span class="line">   &#123;        </span><br><span class="line"><span class="built_in">0x0000006D,</span>    </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>比如以我的为例子：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> Name (SBFB, ResourceTemplate ()</span><br><span class="line"> &#123;</span><br><span class="line">                    I2cSerialBusV2 (<span class="number">0</span>x0000, ControllerInitiated, <span class="number">0</span>x00061A80,</span><br><span class="line"><span class="built_in">                         AddressingMode7Bit,</span> <span class="string">"\\_SB.PCI0.I2C0"</span>,</span><br><span class="line"><span class="built_in">                        0x00,</span> ResourceConsumer, _Y2A, Exclusive,</span><br><span class="line">                        )</span><br><span class="line">                &#125;)</span><br><span class="line"> &#125;</span><br><span class="line"> Name (SBFI, ResourceTemplate ()</span><br><span class="line"> &#123;</span><br><span class="line">                    Interrupt (ResourceConsumer, Level, ActiveLow, </span><br><span class="line"><span class="built_in">Exclusive,</span> ,, )</span><br><span class="line">                     &#123;   </span><br><span class="line"><span class="built_in">                                        0x0000006D,</span>    </span><br><span class="line">                     &#125;</span><br></pre></td></tr></table></figure><p>根据上面要求，就应该修改为：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Name (SBFB, ResourceTemplate ()</span><br><span class="line">&#123;</span><br><span class="line">I2cSerialBusV2 (<span class="number">0x0000</span>, ControllerInitiated, <span class="number">0x00061A80</span>,</span><br><span class="line">AddressingMode7Bit, <span class="string">"<span class="subst">\\</span>_SB.PCI0.I2C0"</span>,</span><br><span class="line">   <span class="number">0x00</span>, ResourceConsumer, _Y2A, Exclusive,</span><br><span class="line">   )</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SBFG-Gpioint-修改"><a href="#SBFG-Gpioint-修改" class="headerlink" title="SBFG (Gpioint) 修改"></a>SBFG (Gpioint) 修改</h3><p>首先尝试在你触摸设备所对应的 DSDT 代码里搜索类似如下的这段代码：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name (<span class="name">SBFG</span>, ResourceTemplate ()    </span><br><span class="line">&#123;        </span><br><span class="line">         GpioInt (<span class="name">Level</span>, ActiveLow, ExclusiveAndWake,PullDefault,<span class="number">0</span>x0000,           </span><br><span class="line">                  <span class="string">"\\_SB.PCI0.GPI0"</span>, <span class="number">0</span>x00, ResourceConsumer, ,            </span><br><span class="line">                   )            </span><br><span class="line">                   &#123;   // Pin list                </span><br><span class="line">                        <span class="number">0</span>x0000            </span><br><span class="line">                   &#125;    </span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p>比如我的是这样：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name (<span class="name">SBFG</span>, ResourceTemplate ()    </span><br><span class="line">&#123;        </span><br><span class="line">GpioInt (<span class="name">Level</span>, ActiveLow, ExclusiveAndWake,PullDefault,<span class="number">0</span>x0000,           </span><br><span class="line"><span class="string">"\\_SB.PCI0.GPI0"</span>, <span class="number">0</span>x00, ResourceConsumer, ,            </span><br><span class="line">)            </span><br><span class="line">&#123;   // Pin list                </span><br><span class="line"><span class="number">0</span>x0038            </span><br><span class="line">&#125;    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果并没有这段代码，那么你需要在触摸设备的根目录下补上这段代码，像这样：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Scope (_SB.PCI0.I2C0)</span><br><span class="line">       &#123;</span><br><span class="line">           Device (TPAD)</span><br><span class="line">           &#123;</span><br><span class="line">               Name (SBFG, ResourceTemplate ()</span><br><span class="line">               &#123;</span><br><span class="line">                    GpioInt (Level, ActiveLow, Exclusive, PullUp, <span class="number">0x0000</span>,</span><br><span class="line">                            <span class="string">"<span class="subst">\\</span>_SB.PCI0.GPI0"</span>, <span class="number">0x00</span>, ResourceConsumer, ,</span><br><span class="line">                            )</span><br><span class="line">                            &#123;   <span class="comment">// Pin list</span></span><br><span class="line">                                <span class="number">0x0038</span></span><br><span class="line">                            &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">               </span><br><span class="line">               ......</span><br></pre></td></tr></table></figure><p>如果有这段代码但蓝色字样的数值为 0，那么你就需要看看自己 _CRS 方法里是不是只有这一行语句：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Return (<span class="name">ConcatenateResTemplate</span> (<span class="name">SBFB</span>, SBFG))</span><br></pre></td></tr></table></figure><p> 如果只有这行代码，那么你就可以转入后续的完善热补丁步骤；否则就需要给其添加 GPIO Pin 数值。</p><p> 如果你是 SunrisePoint 架构 6 代 至 8 代 Kaby Lake-R 处理器（比如：8250U, 8550U）查找 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/skylake/include/soc/gpio_defs.h#L43" target="_blank" rel="noopener"><strong>表一</strong></a>，寻找你之前的 APIC Pin 值，得到一个 IRQ 值；然后再前往 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/skylake/include/soc/gpio_soc_defs.h#L37" target="_blank" rel="noopener"><strong>表二</strong> </a>根据 IRQ 找到一个对应的GPIO Pin值（10进制），把它转换为16进制值。如果这个十六进制数介于 5c 到 77 之间，那么这个数就是你需要的 GPIO Pin值。如果这个数不在这俩数之间，那你就会发现：你的 16 进制 APIC pin 值在表一对应了两个或以上的 IRQ 值。这就需要你分别对多个值进行测试，看哪个才是正确的。有的时候，也可能超出区间但是却只有一个值，那么尝试这个值就好。</p><p> 如果你是 CannonPoint(Lake) 架构 8/9 代标压 Coffee Lake(-R)，查找 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/cannonlake/include/soc/gpio_defs_cnp_h.h#L42" target="_blank" rel="noopener"><strong>表一</strong></a>，寻找你之前的 APIC Pin 值，得到一个 IRQ 值；然后再前往 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/cannonlake/include/soc/gpio_soc_defs_cnp_h.h#L40" target="_blank" rel="noopener"><strong>表二</strong> </a>根据 IRQ 找到一个对应的 GPIO Pin 值（10进制），接着转到 <a href="https://github.com/coolstar/VoodooGPIO/blob/master/VoodooGPIO/CannonLake-LP/VoodooGPIOCannonLakeLP.hpp#L366" target="_blank" rel="noopener"><strong>GPIO Pin 转换公式</strong></a>，你会看到 “CHIPSET_GPP(数字, 基数, 终止, gpio_基数), /* GPP_X */“ 用之前 IRQ 中 “GPP_” 后面的 英文字母（A, B, C…）找到你对应的转换值，用你的 10 进制 GPIO Pin 值减去“基数”然后加上“gpio_基数”，把最后得到数字转换为 16 进制就是你最后的 GPIO Pin</p><p> 如果你是 CannonPoint(Lake) 架构 8 代低压刷新 Whiskylake：以 65U 结尾的处理器（比如：8265U, 8565U），查找 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/cannonlake/include/soc/gpio_defs.h#L42" target="_blank" rel="noopener"><strong>表一</strong></a>，寻找你之前的 APIC Pin 值，得到一个 IRQ 值；然后再前往 <a href="https://github.com/coreboot/coreboot/blob/master/src/soc/intel/cannonlake/include/soc/gpio_soc_defs.h#L45" target="_blank" rel="noopener"><strong>表二</strong> </a>根据 IRQ 找到一个对应的GPIO Pin值（10进制），接着转到 <a href="https://github.com/coolstar/VoodooGPIO/blob/master/VoodooGPIO/CannonLake-H/VoodooGPIOCannonLakeH.hpp#L414" target="_blank" rel="noopener"><strong>GPIO Pin 转换公式</strong></a>，你会看到 “CHIPSET_GPP(数字, 基数, 终止, gpio_基数), /* GPP_X */“ 用之前 IRQ 中 “GPP_” 后面的 英文字母（A, B, C…）找到你对应的转换值，用你的 10 进制 GPIO Pin 值减去“基数”然后加上“gpio_基数”，把最后得到数字转换为 16 进制就是你最后的 GPIO Pin</p><p> 不过在某些极端状况下，你找到的值都不起作用的话。那么此时，你只能去尝试些比较常见的数值了，如<strong>0x17、0x1b、0x34</strong>和<strong>0x55</strong>。（仅限 SunrisePoint）</p><p> 总之，在完成之后，你需要把得到的 16 进制 GPIO pin 数值填入 SBFG 语句块里，像这样：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name (SBFG, ResourceTemplate ()    </span><br><span class="line">&#123;        </span><br><span class="line">     GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, <span class="number">0x0000</span>,           </span><br><span class="line">     <span class="string">"<span class="subst">\\</span>_SB.PCI0.GPI0"</span>, <span class="number">0x00</span>, ResourceConsumer, ,            </span><br><span class="line">      )            </span><br><span class="line">      &#123;   <span class="comment">// Pin list                </span></span><br><span class="line">          <span class="number">0x17</span>     <span class="comment">// 这一行就是你需要填写的位置！            </span></span><br><span class="line">      &#125;   </span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h3 id="CRS-返回值的修改"><a href="#CRS-返回值的修改" class="headerlink" title="CRS 返回值的修改"></a>CRS 返回值的修改</h3><p>## </p><p> 到这里，去 _CRS 方法下，确保所有返回语句只有这一条存在，像这样:</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">Method</span> <span class="params">(_CRS, 0, Serialized)</span>  // _<span class="title">CRS</span>:</span> Current Resource Settings</span><br><span class="line">                 <span class="comment">&#123;</span></span><br><span class="line"><span class="comment">                     Store (Zero, Local0)</span></span><br><span class="line"><span class="comment">                     Store (Zero, Local1)</span></span><br><span class="line"><span class="comment">                     Store (DerefOf (Index (DerefOf (Index (TPID, Local0)), Zero)), Local1)</span></span><br><span class="line"><span class="comment">                     While (LAnd (LNotEqual (Local1, 0xFE), LNotEqual (Local1, TPDF)))</span></span><br><span class="line"><span class="comment">                     &#123;</span></span><br><span class="line"><span class="comment">                         Increment (Local0)</span></span><br><span class="line"><span class="comment">                         If (LGreaterEqual (Local0, SizeOf (TPID)))</span></span><br><span class="line"><span class="comment">                         &#123;</span></span><br><span class="line"><span class="comment">                             Break</span></span><br><span class="line"><span class="comment">                         &#125;</span></span><br><span class="line"></span><br><span class="line"> Store (DerefOf (<span class="keyword">Index</span> (DerefOf (<span class="keyword">Index</span> (TPID, Local0)), Zero)), Local1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Store (DerefOf (<span class="keyword">Index</span> (DerefOf (<span class="keyword">Index</span> (TPID, Local0)), One)), ADR0)</span><br><span class="line">Store (DerefOf (<span class="keyword">Index</span> (DerefOf (<span class="keyword">Index</span> (TPID, Local0)), <span class="number">0</span>x02)), HID2)</span><br><span class="line">Return (ConcatenateResTemplate (SBFB, SBFG))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="轮询模式"><a href="#轮询模式" class="headerlink" title="轮询模式"></a>轮询模式</h2><p>轮询模式所做的修改相对较少，我们只需要保证以下三点即可：</p><p><strong>1、确保没有应用GPIO Controller 补丁</strong></p><p><strong>2、确保没有做GPIO 的手动修改</strong></p><p><strong>3、确保CRS返回值中只不返回 SBFG (Gpioint)</strong></p><h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><p>在这针对一些问题，楼主进行下补充：</p><p><strong>1、不是所有没有 IOinterruptSpecifiers 值或者值小于 2F 的设备都可以直接使用 VoodooI2C。这类设备中，有一部分必须依赖轮询方式。这类触摸板只需按照上面轮询的方法去修改即可。</strong><br><strong>2、对于八代的支持问题。在八代中，Kaby Lake R是唯一一个完美支持的，而对于 Coffee Lake、Cannon Lake、Whiskey Lake 等，代码移植已经进入尾声，现在诚邀这些设备参与测试，感谢你的配合。</strong></p><p><strong>3、GPIO Pin 值问题。在找到 16 进制的 GPIO Pin 值的过程中，有时候可能出现找到的值只有一个却不在区间的情况，此时也要进行试验，如果不满足再试验其他。</strong></p><hr><hr><h2 id="热补丁移植"><a href="#热补丁移植" class="headerlink" title="热补丁移植"></a>热补丁移植</h2><p>热补丁的修改是基于 DSDT 进行的，所以当这个教程 DSDT 修改部分和安装部分走完后，如果你确认你的 DSDT 可以驱动触摸板，就可以尝试将其提取出来，改造为热补丁。如果你的 DSDT 没有解决问题，也不要想着测试这个方法。</p><p>目前六代的 Skylake 的 I2C Controller 热补丁已经制作完成，也可以进行热补丁移植工作了。</p><h3 id="添加-GPIO-与-XOSI-热补丁"><a href="#添加-GPIO-与-XOSI-热补丁" class="headerlink" title="添加 GPIO 与 XOSI 热补丁"></a>添加 GPIO 与 XOSI 热补丁</h3><p>下载 <strong>SSDT-XOSI.aml</strong> 与 <strong>SSDT-GPIO.aml</strong>（如果你使用轮询模式，那么不要下载这个），解压并放在 ACPI/Patched 目录下，然后在四叶草编辑器的 ACPI 选项卡下添加如下两个改名补丁：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">change <span class="variable">_OSI</span> <span class="keyword">to</span> XOSI</span><br><span class="line"></span><br><span class="line"><span class="built_in">Find</span>：<span class="number">5</span>F4F5349    Replace：<span class="number">584</span>F5349</span><br><span class="line"></span><br><span class="line">change <span class="variable">_STA</span> <span class="keyword">to</span> XSTA <span class="built_in">in</span> GPI0 </span><br><span class="line"></span><br><span class="line"><span class="built_in">Find</span>: <span class="number">5</span>F535441    Replace: <span class="number">58535441</span>   TgtBridge:<span class="number">47504930</span></span><br></pre></td></tr></table></figure><p>如果你是六代Skylake的，那么还需要添加 SKL I2C Controller热补丁(详情见后文下载)</p><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>接下来，将你修改好的触摸设备的 ACPI 代码复制到<strong>SSDT-触摸样本.dsl</strong>的 DefinitionBlock 大括号内里，像这样：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E5%A4%8D%E5%88%B6%E4%B9%8B%E5%90%8E.png" alt="复制之后"></p><p>复制之后，我们还要修正名称，来确保这个 SSDT 是正确的。修正的地方有三处：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E4%BF%AE%E6%94%B9%E5%90%8D%E7%A7%B0.png" alt="修改名称"></p><p>第一处第二处都修正为你的 BIOS 名称，而第三处则还要带上 BIOS 名称的全路径（以我的为例）：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E4%BF%AE%E6%94%B9%E5%90%8E.png" alt="修改后"></p><p><strong>补充：经过本人实测，第一处的修不修改其实没有太大影响，不修改也是可以的。</strong></p><h3 id="除错"><a href="#除错" class="headerlink" title="除错"></a><strong>除错</strong></h3><p>接下来，我们就进入了给热补丁排错的过程。</p><p>点击 编译 (Compile)，你会发现此时热补丁会报一堆错误。这里面的错误，大多是因为缺少东西所致。你可能需要因此添加很多东西，比如引用Device、Method，还有一些数据等等。</p><p>在我提供的样本里，已经提供了两个示例展示如何引用。在这，我还是补几张图说明下引用的过程。比如，以我的报错为例。你可以看到，在其中有一条提示缺少了 TPDD：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E6%8A%A5%E9%94%99.jpg" alt="报错"></p><p>所以对应地，我们去 DSDT 搜索，直到最后定位到相应的数值（或者方法、设备以及它们的引用，最后定位只能是这几种）：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/tpdd.png" alt="tpdd"></p><p>第一处表示了它的构造区域，第二处则表示这个名称的值。接下来，我们复制这个数据及其对应的构造区域到SSDT中：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/tpdd%E4%BF%AE%E6%94%B9.png" alt="tpdd修改"></p><p>再点击 Compile，与 TPDD 相关的报错应该都消失了。</p><p>除了这个之外，有时候我们缺失的是设备或者方法，我们只需要从 MaciASL 下方确认它的全路径，然后使用这条语句引用即可：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">External (xxxx<span class="selector-class">.xxxx</span><span class="selector-class">.xxxx</span>, DeviceObj) <span class="comment">//如果是方法，就使用Method0bj；如果是区域则使用FieldUnitObj</span></span><br></pre></td></tr></table></figure><p><strong>注意：这条语句要放在 DefinitionBlock 块内的最前面！</strong></p><p>总之，最后你的 SSDT 要同 DSDT 一样没有 ERROR，这才算完成：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/%E9%80%9A%E8%BF%87.png" alt="通过"></p><p>热补丁教程中提及的有关热补丁我已经分享出来，<a href="https://pan.baidu.com/s/11A1wDi73gF0XVRmxw8sbwQ" target="_blank" rel="noopener">点击这里下载</a>。</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p> 到这里，我们的修改就完成了，接下来就是安装。将你修改好的 DSDT（热补丁）放入 ACPI/patched，再放入驱动。在这个时候，我们需要注意，系统里 AppleIntelLpssI2C.kext 和 AppleIntelLpssI2CController.kext 这两个驱动有可能会导致 VoodooI2C 驱动不工作，因此，有必要移除这两个驱动。你可以选择直接删除它们然后重建缓存，也可以选择用四叶草 Config进行屏蔽。屏蔽的配置文件详见<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/blob/master/config_patches.plist" target="_blank" rel="noopener">这里</a>。</p><p> 如果你使用的是热补丁方式，我们还需要<strong>改名 DSDT 里的触摸设备</strong>，来保证热补丁工作。</p><p> 首先利用 Hackintool 的计算器将你的触摸设备 BIOS 名称转换为 16 位 ASCII 码，然后给这个触摸设备改个名字来保证其不加载（比如改 TPAD 为 XPAD)，再次生成一串 16 位 ASCII 码，它们共同构成了一个 ACPI 补丁，用四叶草编辑器把它填入：</p><p><img src="/2019/01/06/VoodooI2C DSDT Edit/XPAD.png" alt="XPAD"></p><p> 接下来我们重启，如果配置正确，那么现在你应该可以使用你的触摸板了。如果仍然不能使用，那么你需要重新排查，看看自己的操作是否存在问题。有其是热补丁，要格外注意啰嗦模式里面的 ACPI Error，如果出现这个要及时查看自己的配置文件 ACPI 改名是否正确。</p><hr><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>VoodooI2C 使用 CSG 以及白果手势引擎来支持各种多点触控。其中，2.1.1后的版本，换用了白果手势引擎 (Magic Trackpad 2 模拟器)。这类手势可以通过系统设置里面触摸板的相关选项来设置。</p><p>下面就是Voodooi2c所支持的所有手势列表：</p><h5 id="CSG手势："><a href="#CSG手势：" class="headerlink" title="CSG手势："></a>CSG手势：</h5><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">·单击</span><br><span class="line">·两指滚动</span><br><span class="line">·三指配合alt的上下左右滚动</span><br><span class="line">·四指滑动</span><br><span class="line">·拖动（在“辅助功能”里的“鼠标和触摸板”中找到相关设置选项）</span><br><span class="line">·向下 - Command + <span class="built_in">W</span></span><br><span class="line">·向左- Command + <span class="built_in">Q</span></span><br><span class="line">·向上 - 显示桌面</span><br><span class="line">·向下 - Command + F11</span><br></pre></td></tr></table></figure><h5 id="白果手势："><a href="#白果手势：" class="headerlink" title="白果手势："></a>白果手势：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">·双指通知中心</span><br><span class="line">·双指缩放</span><br><span class="line">·双指返回（Safari浏览器）</span><br></pre></td></tr></table></figure><p>另外，2.1.2以上的版本，加入了<strong>“鼠标插入时忽略内建触摸板”</strong>的功能配置以及<strong>“打字防误碰支持”</strong>（需要配合新版<strong>VoodooPS2Controller</strong>）</p><p>教程已经大致更新完毕，后续仍会有补充。</p><p>教程中少部分内容由 <a href="https://github.com/williambj1" target="_blank" rel="noopener">Bat.bat</a> 修补</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这篇博客文章，是我在远景发布的教程：&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1791962-1-
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="DSDT" scheme="http://yoursite.com/tags/DSDT/"/>
    
      <category term="I2C" scheme="http://yoursite.com/tags/I2C/"/>
    
      <category term="触摸板" scheme="http://yoursite.com/tags/%E8%A7%A6%E6%91%B8%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>教你在Win下Clover硬盘安装黑苹果</title>
    <link href="http://yoursite.com/2019/01/05/Install%20Hackinstosh%20with%20Clover%20in%20Windows/"/>
    <id>http://yoursite.com/2019/01/05/Install Hackinstosh with Clover in Windows/</id>
    <published>2019-01-05T07:34:22.000Z</published>
    <updated>2019-12-24T08:33:42.240Z</updated>
    
    <content type="html"><![CDATA[<p>本教程同步自本人在远景所发教程！（<a href="http://bbs.pcbeta.com/viewthread-1798236-1-1.html" target="_blank" rel="noopener">原帖地址</a>)，这里再附上一个视频教程（感谢联想Y7000群的Z大热心制作）。将视频教程对照文字教程，效果将更加好！</p><iframe height="498" width="510" src="http://player.youku.com/embed/XNDA1ODE5MDY5Mg==" frameborder="0" 'allowfullscreen'=""></iframe><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>本方法是传统的MacOS 10.11时代下流行的MBR硬盘安装方法的翻新版。在11时代，这种方法曾经大行其道，是黑果机友普遍采用的一种安装方法。当然即便放在现在，这种方法也不过时。这种方法,相比现在流行的U盘安装（尤其是USB3.0安装）有这些优点：</p><p><strong>·直接硬盘安装，写入速度快，安装快</strong></p><p><strong>·绕开USB，防止由于USB引起的各种安装问题（禁行、五国等）</strong></p><p><strong>·软件操作简单，易上手，不易出错</strong></p><p>相比于淘宝商家目前大行其道的恢复版则有这些优点：</p><p><strong>·与U盘安装大同小异，学习简单</strong></p><p><strong>·一次写入，随时恢复</strong></p><p><strong>·体验完整的安装过程</strong></p><p>那么接下来，就进入我们的硬盘安装教程——</p><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><hr><p>我们硬盘安装所需要的工具如下：</p><p><strong>·用于硬盘安装的CDR镜像以及Leopard硬盘安装助手（以上工具我已经打包放入网盘，<a href="https://pan.baidu.com/s/1mXiwOEDKHXGr-n5hIaRYZg#list/path=%2F" target="_blank" rel="noopener">下载地址点这里</a>）</strong></p><p><strong>·7Zip（<a href="https://www.7-zip.org/a/7z1805-x64.exe" target="_blank" rel="noopener">下载地址</a>）</strong></p><p>由于12以后的镜像采用了新方式进行压制，所以我们不可以再像11时代那样直接用Leopard安装助手那样直接写入DMG来完成安装。因此，这里必须使用特殊制作的镜像来完成这一操作。</p><p>教程里，我选择基于黑果小兵最新发布的10.14.1 镜像（<a href="https://macOS-Mojave-10.14.1-18B75-official-version-with-Clover-4726-original-image.html" target="_blank" rel="noopener">原帖点这里</a>）制作的CDR硬盘安装镜像来进行演示。镜像列表里除了12.6版本外，13.6、14、14.1均基于黑果小兵原版镜像，使用本教程的<a href="https://www.penghubingzhou.cn/2018/12/18/Win下CDR硬盘安装镜像制作教程/" target="_blank" rel="noopener">配套教程</a>制作。镜像除了格式未修改任何地方，并且使用与发布已得到黑果小兵本人授权，请放心使用。</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%8E%88%E6%9D%83.png" alt="授权"></p><p>下载下来的镜像只是硬盘安装的半成品，我们还需要提取其中真正可以用来制作的在所有工具全部下载完毕后，我们用7Zip打开我们下载的 CDR镜像，应该如图所示：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/7zip.png" alt="7zip"></p><p>其中的disk image.hfsx就是我们所需要的硬盘安装镜像。我们直接拖拽它到一个位置，它将会被解压并复制（如图）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%8F%90%E5%8F%96.jpg" alt="提取"></p><p>最终，这个文件就会被提取出来。</p><h1 id="分区准备"><a href="#分区准备" class="headerlink" title="分区准备"></a>分区准备</h1><hr><p>接下来的步骤与传统的硬盘安装大同小异，但是略有不同。</p><p>首先，我们需要先分一个分区，大小大概20GB左右，不要格式化（用什么方法都可以，只要做到我说的那两点就可以了）。此处问题过于基础，不再赘述。</p><p>分区完成后，打开Leopard安装助手文件夹，<strong>右击ddmac.exe,选择“以管理员身份运行”</strong>（有多少硬盘安装失败的小伙伴都是因为漏了这一步导致后面不能选择分区），然后点击选择镜像旁边的浏览按钮（…)，找到刚才我们提取的disk image.hfsx（如图）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%89%93%E5%BC%80%E9%95%9C%E5%83%8F.png" alt="打开镜像"></p><p>如上图，如果正确，下面此时应该会显示镜像尺寸。然后我们再按照这个图进行配置：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%9B%B4%E6%94%B9%E6%9C%AA%E7%9F%A5.png" alt="更改未知"></p><p>三个红圈的对应关系如下：</p><p><strong>·最上的圈：将刚才你新建好的分区挂载到一个盘符下，然后选择这个分区</strong><br><strong>·第二个圈：除了写入选项，剩下三个全部勾掉</strong><br><strong>·第三个圈：如果操作正确，你会看到新建分区的体积</strong></p><p>在这一切完成之后，我们点击开始，开始快速的写入过程：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%86%99%E5%85%A5.jpg" alt="写入"></p><p><strong>注意：写入过程不要对电脑做任何操作，否则助手会假死。一旦假死，切勿强制结束，等待其自动写入完成恢复响应！！！</strong></p><p>当看到<strong>“All  done， have fun”</strong>字样时，我们镜像的写入就完成了。</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%86%99%E5%85%A5%E5%AE%8C%E6%88%90.jpg" alt="写入完成"></p><p>到这里，虽然分区已经写入完毕，但还欠缺一个最重要的步骤，那就是<strong>改变分区标识符为AF</strong>。</p><p>细心的人可能注意到上一张图里<strong>”Changing partiton to AF: failed“</strong>的字样，这也就是这一步关键所在！</p><p>实际上，AF的作用与MBR时代的55AA标识符类似，是Mac引导记录的标志。如果不改变分区标识符为AF，开机四叶草可以认分区，但是加载到读取根文件目录时，将会因为找不到AF分区标识符禁行。</p><p>但是在这里，我们又不能用传统的MBR 操作方法来改变，因为这是GPT。那我们该怎么办呢？其实很简单，只需要使用win自带的Diskpart工具即可。</p><p>1、用命令提示符运行diskpart（会自动请求管理员权限，点击是），输入这条命令回车：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> disk</span><br></pre></td></tr></table></figure><p>![list disk](list disk.png)</p><p>这里我的镜像写在了1T的机械上，所以接下来输入</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  disk <span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后回车：</p><p>![select disk](select disk.png)</p><p>可以看到已经选中了，然后我们再显示该磁盘下所有分区：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>  partition</span><br></pre></td></tr></table></figure><p>![list partition](list partition.png)</p><p>画红线的分区5是我们的镜像分区，输入：  </p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="keyword">partition</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>然后回车。</p><p>![select  partition](select  partition.png)</p><p>接着，我们要输入最关键的一条指令，它是让分区标识符变为AF的关键：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set id=<span class="number">48465300</span><span class="number">-0000</span><span class="number">-11</span>AA-AA11<span class="number">-00306543</span>ECAC</span><br></pre></td></tr></table></figure><p>![change  guid](change  guid.png)</p><p>然后回车：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/success.png" alt="success"></p><p>显示这个界面时，我们就已经成功地改动了分区标识符为AF，输入EXIT回车退出。</p><p>至此，我们成功完成了分区准备！</p><h1 id="准备引导"><a href="#准备引导" class="headerlink" title="准备引导"></a>准备引导</h1><hr><p>这个步骤是负责将四叶草写入EFI的步骤，这一教程实在过多，我在这里不再赘述。有需要的可以参考乐园这篇文章：<a href="https://imac.hk/clover-usb-install-add-boot-menu.html" target="_blank" rel="noopener">黑苹果 Clover 四叶草 u盘安装后如何改为硬盘EFI引导</a></p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><hr><p>其实到这里，我们后面的步骤基本与正常的U盘安装一样了。不过作为一篇新手向教程，没有完整安装的过程是不太负责的，所以剩余的步骤，我也大致讲一下。</p><p>首先，写入镜像后我们重启，可以找到刚才写入的镜像分区：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%AE%89%E8%A3%85%E5%88%86%E5%8C%BA.jpg" alt="安装分区"></p><p>进入，开始启动安装（对我EFI的啰嗦图差评……）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%95%B0%E5%97%A61.JPG" alt="啰嗦1"></p><p>安装的主界面：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A2.JPG" alt="安装界面"></p><p>进入磁盘工具，找到自己要安装的分区，抹除（这里因为我装在机械上，所以选择了扩展式）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%8A%B9%E7%9B%98.JPG" alt="抹盘"></p><p>静静等待抹除完成：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%8A%B9%E9%99%A4%E5%AE%8C%E6%88%90.JPG" alt="抹除完成"></p><p>接下来关闭磁盘工具，选择<strong>安装MacOS</strong>，点继续：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%AE%89%E8%A3%85%E5%BC%80%E5%A7%8B.JPG" alt="安装开始"></p><p>一路向下回车：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E4%B8%80%E8%B7%AF%E5%9B%9E%E8%BD%A6.JPG" alt="一路回车"></p><p>到安装盘这里，选择自己刚刚抹除的分区，点击安装：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E9%80%89%E6%8B%A9%E7%9B%98.JPG" alt="选择盘"></p><p>然后我们只需要静静等待第一段安装的完成（我这里虽然是机械，可是一段安装只用了4分钟，连喝咖啡时间都不够……）</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E4%B8%80%E6%AE%B5%E5%AE%89%E8%A3%85.JPG" alt="一段安装"></p><p>第一段安装完成后，重启，四叶草界面再选安装的分区，回车进入（又一段啰嗦……）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%95%B0%E5%97%A62.JPG" alt="啰嗦2"></p><p>进入到这个界面，标志着二段安装的开始（第二段安装较长，我等待了大概26分钟）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E4%BA%8C%E6%AE%B5%E5%AE%89%E8%A3%85.JPG" alt="二段安装"></p><h1 id="完成配置"><a href="#完成配置" class="headerlink" title="完成配置"></a>完成配置</h1><hr><p>二段安装完成后，我们将进入最后的配置。</p><p>系统再次重启进入后，选择已经安装黑苹果的那个分区（啰嗦×3……）：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%95%B0%E5%97%A63.JPG" alt="啰嗦3"></p><p>接着，我们将进入设置界面：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%8C%BA%E5%9F%9F%E8%AF%AD%E8%A8%80.JPG" alt="区域语言"></p><p>按照需要，自己一路回车设置，并填写好账户密码，最后等待设置完成：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E8%AE%BE%E7%BD%AEmac.JPG" alt="设置mac"></p><p>暗黑色的Mojave界面出来了，我们的安装顺利结束：</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E6%A1%8C%E9%9D%A2.JPG" alt="桌面"></p><p>到这里，我们的整篇教程已经全部结束了。最后补上一张关于本机的图作为本教程的结尾~</p><p><img src="/2019/01/05/Install Hackinstosh with Clover in Windows/%E5%85%B3%E4%BA%8E%E6%9C%AC%E6%9C%BA.JPG" alt="关于本机"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本教程同步自本人在远景所发教程！（&lt;a href=&quot;http://bbs.pcbeta.com/viewthread-1798236-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原帖地址&lt;/a&gt;)，这里再附上一个视频教程（感谢联想Y70
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="镜像" scheme="http://yoursite.com/tags/%E9%95%9C%E5%83%8F/"/>
    
      <category term="DMG" scheme="http://yoursite.com/tags/DMG/"/>
    
      <category term="EFI" scheme="http://yoursite.com/tags/EFI/"/>
    
  </entry>
  
  <entry>
    <title>Win下CDR懒人硬盘安装镜像制作教程</title>
    <link href="http://yoursite.com/2018/12/18/CDR%20Image%20Making%20in%20Windows/"/>
    <id>http://yoursite.com/2018/12/18/CDR Image Making in Windows/</id>
    <published>2018-12-18T14:45:00.000Z</published>
    <updated>2019-12-24T08:29:32.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>此教程是远景帖子的同步更新篇，详细讲述如何在Win下制作硬盘安装镜像。</p><p>CDR懒人安装镜像的优点是方便快捷，并且能写入硬盘，安装速度快。在11以前MBR大行其道的时代尚且具有不可比拟的优势，在现在固态GPT的时代也一样大有前途（尤其是在USB3.0与黑果存在问题的时候，一个硬盘安装可以节省出一大堆宝贵的时间来）。</p><p>其实最开始，我已经摸索到如何制作CDR镜像，并且实现了在Win下硬盘安装镜像的提取。但是，在win下制作CDR安装镜像缺少一个重要的环节，那就是：<strong>缺少一个合适的工具，能够将DMG在win下转换为CDR。</strong></p><p>直到大概18年的4月份的时候，我注意到了新版软碟通（UltralISO）的出现。在他的更新描述里，有这样一句话： 可以直接从Dmg映像制作 Mac OS X Mountain Lion 启动U盘（详情见<a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="noopener">软碟通更新日志</a>）。</p><p>就是这简短的一句话，使得这一个棘手的问题迎刃而解。抱着试验性的态度，我用13.6的镜像进行了测试，结果不出所料，能够正常制作并顺利进行安装。随后我又先后在12.6、14、14.1上进行了测试，都顺利通过。至此我断定，这是一个通用的制作方法。</p><p>好东西当然要大家一起分享，现在就分享出我的方法。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><hr><p>其实方法本身简单易懂，首先你要下载最新的3519版软碟通并安装（<a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="noopener">下载地址点这里</a>），打开“关于”之后应该是这个样子的：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E8%BD%AF%E7%A2%9F%E9%80%9A.png" alt="软碟通"> </p><p>然后打开你的DMG镜像（这里我以小兵14.1镜像为例）：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E6%89%93%E5%BC%80.png" alt="打开"> </p><p>然后我们点击菜单里的“工具”——“转换”：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E7%82%B9%E5%87%BB.jpg" alt="点击.jpg"> </p><p>弹出如下界面：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E5%AF%B9%E8%AF%9D%E6%A1%86.png" alt="对话框.png"> </p><p><strong>敲黑板：输出格式这里我们一定要选择ISO格式！（事实上，就目前的镜像而言，苹果的CDR格式仍然是遵从了ISO压缩标准，因此转换为CDR，实质就是转化为ISO）</strong></p><p>选择完成后，然后我们点转换，镜像将开始转换：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E5%BC%80%E5%A7%8B%E8%BD%AC%E6%8D%A2.png" alt="开始转换.png"> </p><p><img src="/2018/12/18/CDR Image Making in Windows/%E8%BD%AC%E6%8D%A2%E5%AE%8C%E6%88%90.png" alt="转换完成.png"> </p><p>出现上面的转换完成对话框之后，我们可以在输出目录找到你的转好好的ISO镜像：</p><p><img src="/2018/12/18/CDR Image Making in Windows/%E8%BD%AC%E6%8D%A2%E5%A5%BD%E7%9A%84%E9%95%9C%E5%83%8F.png" alt="转换好的镜像.png"> </p><p>画圈的是转换好的ISO镜像，现在将镜像的后缀名改为CDR，像这样：</p><p><img src="/2018/12/18/CDR Image Making in Windows/cdr%E5%90%8E%E7%BC%80.png" alt="cdr后缀.png"> </p><p>现在这个镜像已经转换完成了，你现在可以进行硬盘安装了。</p><p><strong>注意：</strong></p><p><strong>1、转换好的镜像仍然允许你使用Transmac写入U盘，但不支持etcher写入。</strong></p><p><strong>2、使用7Zip，你可以提取镜像中的EFI分区（里面会以EFI partition.img的形式存在）。</strong></p><p>在<a href="https://www.penghubingzhou.cn/resources/" target="_blank" rel="noopener">我的资源</a>里，有关于制作好的相关资源分享，大家可自行前往查找！</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;此教程是远景帖子的同步更新篇，详细讲述如何在Win下制作硬盘安装镜像。&lt;/p&gt;
&lt;p&gt;CDR懒人安装镜像的优点是方便快捷，并且能写
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="镜像" scheme="http://yoursite.com/tags/%E9%95%9C%E5%83%8F/"/>
    
      <category term="安装" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>联想潮7000 14 EFI 3.1更新</title>
    <link href="http://yoursite.com/2018/12/18/Lenovo%20Xiaoxin%20Chao7000%2014%20EFI%203.1%20Update/"/>
    <id>http://yoursite.com/2018/12/18/Lenovo Xiaoxin Chao7000 14 EFI 3.1 Update/</id>
    <published>2018-12-18T13:15:03.000Z</published>
    <updated>2019-01-25T04:53:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>这应该是今年最后一个潮7000 14寸EFI的更新了。回想这一年一路走来，黑果之路有过艰辛，有过坎坷。从零开始，在我的手下，潮7000 14从无到有，从触摸到变频再到多版本适配，一步一个脚印，日益完善。</p><p>当然，楼主不是最先开始开发这一机型EFI的人，在我之前，早就有人发布了相应的EFI。小白伯同学完成了最早期的潮7000 14寸EFI的适配，并推出了13的安装版（他的原帖子详见<a href="http://bbs.pcbeta.com/viewthread-1763675-1-1.html" target="_blank" rel="noopener">这里</a>）。但是，在开发之初，我并不太清楚有这个帖子，所以我仍然是从零开始的。不过，也正是这次美丽的错过，才有了后来14寸从12、13到14全系列的适配EFI。应该说，这应该是一种缘分。</p><p>最近博主的身体不算太好，就在发此文章的时候，博主刚刚退烧。不过即便是发烧，我们的更新还是要继续的！对于我来说，一个EFI新版本的发布要胜过病痛！！！</p><p>好了，话不多说，接下来进入正题。</p><h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><hr><p>1、更新四叶草版本到4798，支持14.1和14.2的安装。</p><p>2、使用VirtualSMC代替FakeSMC作为全新的SMC驱动。</p><p>3、更新VoodooI2C驱动，解决了3.0 EFI 下由于VoodooI2C的内存泄漏引起的长时间使用死机崩溃问题（感谢<strong>@kprissu</strong>的修改。详情请见<a href="https://github.com/alexandred/VoodooI2C/commit/852c48f290512435c92ddaf6c33d0a468ab248ff" target="_blank" rel="noopener">这里</a>)</p><p>4、更新了全新的暗黑Mojave主题（感谢<strong>@chflame</strong>的分享，原文请见<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1794804&highlight=%D3%A6%BE%B0" target="_blank" rel="noopener">这里</a>)</p><p>5、更新WhateverGreen、Lilu到1.2.4和1.2.8</p><p>6、添加NullEthernet虚拟内建网卡，USB网卡也可以直接打开App Store。</p><h1 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h1><hr><p> 1、VoodooI2C驱动遗留问题（右键、“通知中心”手势）</p><p>2、FaceTime黑屏问题（老生常谈）</p><p>3、睡眠之后声卡问题（群友反映，放到下个版本解决）</p><p>全版本下载地址：<a href="https://pan.baidu.com/s/1QcrvxI5a68eUH37RmNd-Fg#list/path=%2F" target="_blank" rel="noopener">点我下载</a></p><h1 id="未来更新"><a href="#未来更新" class="headerlink" title="未来更新"></a>未来更新</h1><hr><p>对于潮7000 14来说，目前基本在我能力范围的东西已经比较完美了。当然，诸如FaceTime摄像头瑕疵，还有VoodooI2C驱动问题，这目前还不在楼主的能力范围之内。</p><p>“人生而有涯，而学也无涯”，我要学的还有很多。目前，我想要解决的一个重大问题就是13寸系列的适配。13寸已经很久无人更新，很多地方遗留问题。之前的热补丁更新，便是为未来13寸准备的。希望有更多人加入我的EFI的开发队伍，为更多黑果果友们造福！！！</p><hr><p> 今天的更新到这就结束了。欢迎大家加入潮7000的交流群：<strong>729420933</strong>，跟我们分享你的使用心得，加入我们的开发队伍，享受最新的测试版本，体验最新的功能！</p><hr><p><strong>2019，祝大家，新年，新气象！！！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;这应该是今年最后一个潮7000 14寸EFI的更新了。回想这一年一路走来，黑果之路有过艰辛，有过坎坷。从零开始，在我的手下，潮70
      
    
    </summary>
    
      <category term="EFI" scheme="http://yoursite.com/categories/EFI/"/>
    
    
      <category term="更新" scheme="http://yoursite.com/tags/%E6%9B%B4%E6%96%B0/"/>
    
      <category term="Config" scheme="http://yoursite.com/tags/Config/"/>
    
  </entry>
  
</feed>
